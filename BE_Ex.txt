        public void CreateTemplateHSNVAsync(LVStreamReader requestReader, LVStreamWriter responseWriter)
        {
            var result = CreateTemplateHSNVAsyncLogic();
            responseWriter.WriteObject(result);
        }
        public object CreateTemplateHSNVAsyncLogic()
        {
            string companyName = "CÔNG TY CỔ PHẦN TIN HỌC LẠC VIỆT";
            string address = "23 Nguyễn Thị Huỳnh, P.8, Q. Phú Nhuận, Tp. HCM";
            int startColumn = 1;
            int colMergeLength = Math.Max(companyName.Length / 3, 5);

            string cmd = "SELECT *FROM HR_SysCategoryExcelHSNVDetail";
            var dbContext = Repository.UnitOfWork.Orm as dynamic;
            using var cnn = (DataConnection)dbContext.GetDBConnection();

            var tbl = cnn.Query<HR_SysCategoryExcelHSNVDetail>(cmd).ToList();

            using (var package = new ExcelPackage())
            {
                var exportPackage = new ExcelPackage();
                exportPackage.Workbook.Worksheets.Add("Template Sample");
                var exportWorksheet = exportPackage.Workbook.Worksheets[0];

                int idxFieldBinding = 4; 
                int idxRow = 1;
                CountField listCount = new CountField
                {
                    CV = tbl.Where(item => item.FCategoryCode == "CV").Count(),
                    IC = tbl.Where(item => item.FCategoryCode == "IC").Count(),
                    EA = tbl.Where(item => item.FCategoryCode == "EA").Count(),
                    CT = tbl.Where(item => item.FCategoryCode == "CT").Count(),
                };

                EA countEA = new EA
                {
                    PC12 = tbl.Where(item => item.FCategoryCodeDetail == "PC12").Count(),
                    PC13 = tbl.Where(item => item.FCategoryCodeDetail == "PC13").Count(),
                    PC14 = tbl.Where(item => item.FCategoryCodeDetail == "PC14").Count(),
                    PC15 = tbl.Where(item => item.FCategoryCodeDetail == "PC15").Count(),
                };

                foreach (var item in tbl)
                {
                    // Dòng tên cột
                    exportWorksheet.Cells[1, startColumn, 1, startColumn + colMergeLength - 1].Merge = true;
                    exportWorksheet.Cells[1, 1].Value = companyName;
                    exportWorksheet.Cells[1, 1].Style.Font.Bold = true;
                    exportWorksheet.Cells[1, 1].Style.Font.Color.SetColor(System.Drawing.Color.Red);

                    exportWorksheet.Cells[2, startColumn, 2, startColumn + colMergeLength - 1].Merge = true;
                    exportWorksheet.Cells[2, 1].Value = address;
                    exportWorksheet.Cells[2, 1].Style.Font.Bold = true;

                    exportWorksheet.Cells[3, 1].Value = "TEMPLATE NHẬP NHANH THÔNG TIN NHÂN VIÊN";
                    exportWorksheet.Cells[3, 1].Style.Font.Bold = true;
                    exportWorksheet.Cells[3, 1].Style.Font.Size = 16;
                    exportWorksheet.Cells[3, 1, 3, tbl.Count].Merge = true;
                    exportWorksheet.Cells[3, 1].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;

                    switch (item.FCategoryCode)
                    {
                        case "CV":
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Value = item.DisplayTableName;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, 1, idxFieldBinding + 1, 5].Merge = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.Yellow);

                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.Yellow);
                            break;
                        case "IC":
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Value = item.DisplayTableName;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, 6, idxFieldBinding + 1, 7].Merge = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(146, 208, 80));

                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(146, 208, 80));
                            break;
                        case "EA":
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Value = item.DisplayTableName;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, 8, idxFieldBinding, 15].Merge = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(255, 192, 0));

                            switch (item.FCategoryCodeDetail)
                            {
                                case "PC12":
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Value = item.DisplayTableNameDetail;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 1, 8, idxFieldBinding + 1, 9].Merge = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(231, 230, 230));

                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(231, 230, 230));
                                    break;
                                case "PC13":
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Value = item.DisplayTableNameDetail;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 1, 10, idxFieldBinding + 1, 11].Merge = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(226, 239, 218));

                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(226, 239, 218));
                                    break;
                                case "PC14":
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Value = item.DisplayTableNameDetail;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 1, 12, idxFieldBinding + 1, 13].Merge = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(255, 230, 153));

                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(255, 230, 153));
                                    break;
                                case "PC15":
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Value = item.DisplayTableNameDetail;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 1, 14, idxFieldBinding + 1, 15].Merge = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 1, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(180, 198, 231));

                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                                    exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(180, 198, 231));
                                    break;
                                default:
                                    break;
                            }
                            break;
                        case "CT":
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Value = item.DisplayTableName;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, 16, idxFieldBinding + 1, 17].Merge = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(221, 235, 247));

                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Value = item.DisplayName;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Font.Bold = true;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.PatternType = ExcelFillStyle.Solid;
                            exportWorksheet.Cells[idxFieldBinding + 2, idxRow].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.FromArgb(221, 235, 247));
                            break;
                        default:
                            break;
                    }
                    
                    exportWorksheet.Cells[idxFieldBinding + 3, idxRow].Value = "[" + item.FCategoryCode + "." + item.FactorCode + "]";
                    exportWorksheet.Cells[idxFieldBinding + 3, idxRow].Style.HorizontalAlignment = ExcelHorizontalAlignment.Left;

                    idxRow++;
                }
                exportWorksheet.Cells.AutoFitColumns();
                using (ExcelRange Rng = exportWorksheet.Cells[idxFieldBinding, 1, idxFieldBinding + 2, exportWorksheet.Dimension.Columns])
                {
                    Rng.Style.Border.Top.Style = ExcelBorderStyle.Thin;
                    Rng.Style.Border.Left.Style = ExcelBorderStyle.Thin;
                    Rng.Style.Border.Right.Style = ExcelBorderStyle.Thin;
                    Rng.Style.Border.Bottom.Style = ExcelBorderStyle.Thin;
                }
                var ms = new System.IO.MemoryStream();
                exportPackage.SaveAs(ms);

                return new object[] { ms.ToArray() };
            }
            //return tbl;
        }

        public class CellExcel
        {
            public string Value { get; set; }
            public string Address { get; set; }
        }

        public class FieldMapping
        {
            public string FieldName { get; set; }
            public string DisplayName { get; set; }
        }

        public class HR_SysCategoryExcelHSNVDetail
        {
            public string FactorCode { get; set; }
            public string DisplayName { get; set; }
            public string FCategoryCode { get; set; }
            public string FCategoryCodeDetail { get; set; }
            public string TableName { get; set; }
            public string DisplayTableName { get; set; }
            public string DisplayTableNameDetail { get; set; }
        }

        public class CountField
        {
            public int CV { get; set; }
            public int IC { get; set; }
            public int EA { get; set; } 
            public int CT { get; set; }
        }

        public class EA
        {
            public int PC12 { get; set; }
            public int PC13 { get; set; }
            public int PC14 { get; set; }
            public int PC15 { get; set; }
        }
