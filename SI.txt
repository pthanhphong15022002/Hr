CREATE OR REPLACE PROCEDURE "HR_spDeductionSI"
(
	p_AdjDowCode text = '2022/02',
	p_NumAdj integer = 1,
	p_note varchar(200) = '',
	p_UserID VARCHAR(20) = '20210000003',
	p_strEmps text = '190158',
	p_IsTmp BOOLEAN = FALSE,
	p_GenDate TIMESTAMP(3) = '2022/02/28'
) --// [HR_SocialInsAdjust] và [HR_SocialIns] và [HR_SocialInsAdjust_Layer] và [HR_SocialIns_Layer] [sẽ có sự thay đổi khi mà thực hiện trích nộp]
AS $$
	DECLARE v_DowCode_SI varchar(7); v_CurrencyCode varchar(3); v_decp int; v_tmp_fBegDay timestamp(3); v_tmp_fEndDay timestamp(3);

  v_FDate timestamp(3);
  v_TDate timestamp(3);
  v_Num_Add int;
  v_MaxEndDate TIMESTAMP(3);
  v_FDate_PrevM timestamp(3);
  v_TDate_PrevM TIMESTAMP(3);
  v_PrevAdjDowCode varchar(7);
  v_EmployeeID VARCHAR(20);
  v_MinSalary decimal(18,5);
  v_CoeffSalary DOUBLE PRECISION;
  v_Real_Salary decimal(18,5);
  v_EndDate TIMESTAMP(3);
  v_mTyleBHXH DOUBLE PRECISION;
  v_mTyleBHYT DOUBLE PRECISION;
  v_mTyleBHTN DOUBLE PRECISION;
  v_mAmountSI decimal(18,5);
  v_mBHXHMax decimal(18,5);
  v_mBHYTMax decimal(18,5);
  v_mBHTNMax decimal(18,5);
  v_SalaryInsO decimal(18,5);
  v_SalaryInsO_YT decimal(18,5);
  v_SalaryInsO_TN decimal(18,5);
  v_JobAllo decimal(18,5);
  v_SeniorAllo decimal(18,5);
  v_SeniorOverAllo decimal(18,5);
  v_OtherAllo decimal(18,5);
  v_Amount decimal(18,5);
  v_CoeffJobAllo decimal(18,5);
  v_CoeffSeniorAllo decimal(18,5);
  v_CoeffSeniorOverAllo decimal(18,5);
  v_CoeffOtherAllo decimal(18,5);
  v_TotalCoeffAllo decimal(18,5);
  v_DateNum DOUBLE PRECISION;
  v_KowType INT;
  v_AmountF decimal(18,5);
  v_mTyleBHXHCN DOUBLE PRECISION;
  v_mTyleBHXHCT DOUBLE PRECISION;
  v_mTyleBHYTCN DOUBLE PRECISION;
  v_mTyleBHYTCT DOUBLE PRECISION;
  v_mTyleBHTNCN DOUBLE PRECISION;
  v_mTyleBHTNCT DOUBLE PRECISION;
  v_RealSalSI decimal(18,5);
  v_OldRealSalSI decimal(18,5);
  v_RealSalHI decimal(18,5);
  v_OldRealSalHI decimal(18,5);
  v_RealSalUI decimal(18,5);
  v_OldRealSalUI decimal(18,5);
  v_active BOOLEAN;
  v_ReturnKCBDate timestamp(3);
  v_GroupType int;
  v_totPrevPercentPay decimal(18,5);
  v_totCurrPercentPay decimal(18,5);
  v_KowTypePreM INT;
  v_YYYYMMJoinDate VARCHAR(7);
  v_IsReduceSiUi BOOLEAN;
  v_PreDowCode VARCHAR(7);
  v_bs_EffectDate TIMESTAMP(3);
  v_Dayoff_EndDate TIMESTAMP(3);
  v_IsReturnKCB BOOLEAN;
  v_PRSITotalPaidDays double precision;
  v_PRSIPaidDayKowCodes VARCHAR(200);
  v_PRSIAdjDowCodeType int;
  v_PRSITotalPaidDaysType INT;
  v_FlagIsDeduction BOOLEAN;
  v_InsReportingDate TIMESTAMP(3);
  v_OfficialDate TIMESTAMP(3);
  v_KowCode VARCHAR(20);
  v_tmpDayNum DOUBLE PRECISION;
  v_mSSL INT;
  v_Eff_DateNotSi TIMESTAMP(3);
  v_Eff_DayOffSi TIMESTAMP(3);
  v_PRSIDayDecrease INT;
  v_PRSITotalDayNotPay INT;
  v_PRSIDayReturnHI INT;
  v_PRIsSI1RowForDescreaseML BOOLEAN;
  v_PRTUnionRateCo DOUBLE PRECISION;
  v_mUN DOUBLE PRECISION;
  v_PRCurrencyForPay VARCHAR(10);
  v_Flag_THAISAN_COTANGLUONG BOOLEAN;
  v_HICode VARCHAR(20);
  v_RateEmp DOUBLE PRECISION;
  v_RateCo DOUBLE PRECISION;
  v_Row_ID INT;
  v_TSHoursPerWD DOUBLE PRECISION;
  v_tmpDatetime timestamp(3);
  v_tmpPRSITotalPaidDays double precision;
  v_JoinDate timestamp(3);
  v_tmpAdjDowCode VARCHAR(20);
  v_PrevDowCode VARCHAR(7);
  v_mTyleBHXH_old DOUBLE PRECISION;
  v_mTyleBHXHCN_old DOUBLE PRECISION;
  v_mTyleBHXHCT_old DOUBLE PRECISION;
  v_mTyleBHTN_old DOUBLE PRECISION;
  v_mTyleBHTNCN_old DOUBLE PRECISION;
  v_mTyleBHTNCT_old DOUBLE PRECISION;
  v_mTyleBHYT_old DOUBLE PRECISION;
  v_mTyleBHYTCN_old DOUBLE PRECISION;
  v_mTyleBHYTCT_old DOUBLE PRECISION;
  v_tmpDateNum DOUBLE PRECISION;
  v_tmpDowCode VARCHAR(7);
  v_mType int;
  -- Biến ở goto
  v_fEndDay timestamp;
begin
	
	-- Danh sách phòng ban đã bị khóa
	create temporary table "tmp_Deps" as
	select ce.* from (
			select "OrgUnitID" from "HR_fnGetUserLockPayroll_Salary"(p_AdjDowCode)
		) as ce;	

	CREATE TEMPORARY TABLE "tmpEmps" AS
	SELECT ce.* FROM (
			select CAST(data AS VARCHAR(20)) as "EmployeeID" FROM "SplitStrings_CTE"(p_strEmps, ',')
		) AS ce;

	select "BegDay", "EndDay" into v_tmp_fBegDay, v_tmp_fEndDay from "HR_LSPayrollDow" where "DowCode" = p_AdjDowCode
	limit 1;


	create temporary table "tmp_HR_ConfigTSEmpStandardWD" as
	select ce.* from (
			select T."EmployeeID", T."FromDate", T."ToDate", T."StandardWD" from "HR_ConfigTSEmpStandardWD" as T inner join "tmpEmps" as T1 on T."EmployeeID" = T1."EmployeeID"
			where T."DowCode" = p_AdjDowCode
		) as ce;

	CREATE TEMPORARY TABLE "tmp_HCSSYS_ConfigTSEmp" AS
	SELECT ce.* FROM (
			SELECT T."EmployeeID", CASE WHEN T."TSHoursPerWD" = 1 THEN 8 ELSE 1 END AS "TSHoursPerWD"
			FROM "HR_ConfigTSEmp" as T inner join "tmpEmps" as T1 on T."EmployeeID" = T1."EmployeeID"
		) AS ce;

	create temporary table "tmp_employee_filters" as
	select "EmployeeID", "E_EndDate", "E_Active", "E_ReturnKCBDate", SUBSTR(TO_CHAR ("E_ReturnKCBDate", 'YYYY/MM/DD'), 1, 7) as "E_ReturnKCBDate_YYYYMM", extract(day from "E_ReturnKCBDate") as "E_ReturnKCBDate_DD", 
			ce."YYYYMMJoinDate", ce."CurrencyCode", ce."JoinedOn", ce."OrgUnitID", ce."BUCode", "IsSI", "IsHI", "IsUI", "GroupType", "TaxCode", coalesce("FromDate", v_tmp_fBegDay) as "FromDate", 
			coalesce("ToDate", v_tmp_fEndDay) as "ToDate", "HiredOn",
			ce."SICode", ce."HICode", ce."UICode", COALESCE("IsReturnKCB",0) AS "IsReturnKCB", "TSHoursPerWD"
	 from (
			select E."EmployeeID", E."StoppedOn" as "E_EndDate", E."Active" as "E_Active", E."IsReturnKCB", E."ReturnKCBDate" as "E_ReturnKCBDate", SUBSTR(TO_CHAR (E."JoinedOn", 'YYYY/MM/DD'), 1, 7) AS "YYYYMMJoinDate",
				E."CurrencyCode", E."JoinedOn", E."OrgUnitID", COALESCE(NULL, '') AS "BUCode", 
				CASE WHEN E."HICode" IS NULL THEN 0 ELSE 1 END AS "IsSI",
				CASE WHEN E."HICode" IS NULL THEN 0 ELSE 1 END AS "IsHI", 
				CASE WHEN E."UICode" IS NULL THEN 0 ELSE 1 END AS "IsUI", "GroupType", "TaxCode", T2."FromDate", "ToDate", "HiredOn",
				E."SICode", E."HICode", E."UICode", T4."TSHoursPerWD"
			from "tmpEmps" as F 
				INNER JOIN "HR_VWEmployees" as E on F."EmployeeID" = E."EmployeeID"
				LEFT JOIN "tmp_Deps" as Deps on E."OrgUnitID" = Deps."OrgUnitID"
				LEFT JOIN "HR_LSGroupSalary" as GS on E."GroupSalCode" = GS."GroupSalCode" 
				LEFT JOIN "tmp_HR_ConfigTSEmpStandardWD" AS T2 ON E."EmployeeID" = T2."EmployeeID"
				LEFT JOIN "tmp_HCSSYS_ConfigTSEmp" AS T4 ON F."EmployeeID" = T4."EmployeeID"
			where Deps."OrgUnitID" is NULL
		) as ce;

	-- Lay ve danh sach nhan vien chuan bi thuc hien trich nop BHXH va xoa di du lieu cu thoa dk where 
	DELETE FROM "HR_SocialIns" SI
	WHERE EXISTS (
		SELECT 1 FROM "tmp_employee_filters" F 
		WHERE SI."EmployeeID" = F."EmployeeID"
	)
	AND SI."DowCode" = p_AdjDowCode;
	
	-- Lay ve danh sach nhan vien chuan bi thuc hien trich nop BHXH va xoa di du lieu cu thoa dk where 
	DELETE FROM "HR_SocialInsAdjust" SIA
	USING "tmp_employee_filters" F
	WHERE SIA."EmployeeID" = F."EmployeeID"
	AND SIA."AdjDowCode" = p_AdjDowCode
	AND SIA."NumAdj" = p_NumAdj;

	-- Xoa du lieu cu khi phat sinh biet le tu dong
	DELETE FROM "HR_PayTExcept" T
	USING "tmp_employee_filters" T1
	WHERE T."EmployeeID" = T1."EmployeeID"
	AND T."ExceptCode" IN (
		SELECT "ExceptCode"
		FROM "HR_ConfigPRSubAutoBackCollectSI"
		WHERE "IsGenMoney" = 1
	)
	AND T."DowCode" = p_AdjDowCode;


	--ngay bat dau va ngay ket thuc cua 'gia tri ngay nghi viec lam can cu bao giam'
	v_FDate := To_timestamp(p_AdjDowCode || '/01', 102);

	v_TDate :=  INTERVAL '-1 day' + (DATE_PART('year', v_FDate) - DATE_PART('year', '1900-01-01')) * 12 + (DATE_PART('month', v_FDate) - DATE_PART('month', '1900-01-01'))+1 * INTERVAL '1 month' + 0;

	v_FDate_PrevM := SUBSTR(TO_CHAR (INTERVAL '-1 MONTH' + v_FDate, 'YYYY/MM/DD'), 1, 7) || '/01';
	v_TDate_PrevM := INTERVAL '-1 day' + (DATE_PART('year', v_FDate_PrevM) - DATE_PART('year', '1900-01-01')) * 12 + (DATE_PART('month', v_FDate_PrevM) - DATE_PART('month', '1900-01-01'))+1 * INTERVAL '1 month' + 0;

	v_PrevAdjDowCode := substr(to_char (INTERVAL '-1 month' + cast(p_AdjDowCode || '/01' as timestamp(3)), 'yyyy/mm/dd'), 1, 7);
	
	CREATE TEMPORARY TABLE "tmp_tblRateDeductions" AS
	SELECT ce.* FROM (
			SELECT COALESCE(NULL, '') AS "BUCode2", "SICode", "InsType", "RateEmp", "RateCo", "MinSalary", "MaxSalary" FROM "HR_fnGetInsuranceTypeByTime"(p_AdjDowCode)
		) AS ce;
	
	create temporary table "TMP_SocialInsAdjust" as
	select ce.* from (
			select T."EmployeeID", MAX(T1."AdjDowCode") AS "AdjDowCode"
			from "tmp_employee_filters" as T inner join "HR_SocialInsAdjust" as T1 on T."EmployeeID" = T1."EmployeeID"
			where T1."AdjDowCode" < p_AdjDowCode and "NumAdd" in (2,3,4)
			group by T."EmployeeID"
		) as ce;
	
	create temporary table "TMP_SocialInsAdjust_delete" as
	select ce.* from (
			select T."EmployeeID"
			from "TMP_SocialInsAdjust" as T inner join "HR_SocialInsAdjust" as T1 on T."EmployeeID" = T1."EmployeeID"
			where T1."AdjDowCode" > T."AdjDowCode" AND T1."NumAdd" = 1
			group by T."EmployeeID"
		) as ce; 

	DELETE FROM "TMP_SocialInsAdjust" T
		USING "TMP_SocialInsAdjust_delete" T1
		WHERE T."EmployeeID" = T1."EmployeeID";
	
	CREATE TEMPORARY TABLE "tmp_Employee_Config" AS
	SELECT ce.* FROM (
		SELECT T."EmployeeID", "E_EndDate", "E_Active", "E_ReturnKCBDate", SUBSTR(TO_CHAR ("E_ReturnKCBDate", 'YYYY/MM/DD'), 1, 7) as "E_ReturnKCBDate_YYYYMM", extract(day from "E_ReturnKCBDate") as "E_ReturnKCBDate_DD", 
		T."YYYYMMJoinDate", T."CurrencyCode", T."JoinedOn", T."OrgUnitID", T."BUCode", "IsSI", "IsHI", "IsUI", "GroupType", "TaxCode", coalesce("FromDate", v_tmp_fBegDay) as "FromDate", 
		coalesce("ToDate", v_tmp_fEndDay) as "ToDate", "HiredOn",
		T."SICode", T."HICode", T."UICode", COALESCE("IsReturnKCB",0) AS "IsReturnKCB", "TSHoursPerWD", T1.*, 
			T2."RateEmp" AS "SI_RateEmp", T2."RateCo" AS "SI_RateCo", T2."MinSalary" AS "SI_MinSalary", T2."MaxSalary" AS "SI_MaxSalary",
			T3."RateEmp" AS "HI_RateEmp", T3."RateCo" AS "HI_RateCo", T3."MinSalary" AS "HI_MinSalary", T3."MaxSalary" AS "HI_MaxSalary",
			T4."RateEmp" AS "UI_RateEmp", T4."RateCo" AS "UI_RateCo", T4."MinSalary" AS "UI_MinSalary", T4."MaxSalary" AS "UI_MaxSalary",
			COALESCE("HiredOn", "Eff_DateNotSi") AS "E_OfficialDate",
			"FromDate" AS "fBegDay", 
			CASE when EXTRACT(DAY FROM "ToDate") > EXTRACT(DAY FROM "Eff_DateNotSi") then substr(to_char ("ToDate", 'yyyy/mm/dd'), 1, 7) || '/' || cast(EXTRACT(DAY FROM "Eff_DateNotSi") as varchar(30)) else "ToDate" END AS "fEndDay",
			INTERVAL '1 day' + INTERVAL '-1 month' + "Eff_DateNotSi" - 1 AS "FDateTS", "Eff_DateNotSi" - 1 AS "TDateTS"
		FROM "tmp_employee_filters" AS T 
		INNER JOIN (
			SELECT COALESCE(S."BUCode", '') AS "BUCode1", "PRDecPlaceCurrencyForCal", "PRDecPlaceCurrencyForPay", "PRSIDayReturnHI", "PRSIDayEffect", "PRSIDayDecrease", "PRTUnionRateCo",
				"PRIsSIByCurrencyForCal", "PRCurrencyForPay", "PRSITotalDayNotPay", COALESCE("PRIsSI1RowForDescreaseML",0) AS "PRIsSI1RowForDescreaseML",
				case WHEN "PRIsSIByCurrencyForCal" = 1 THEN "PRDecPlaceCurrencyForCal" ELSE "PRDecPlaceCurrencyForPay" END AS "mSSL",
				To_timestamp(p_AdjDowCode || '/' || cast("PRSIDayEffect" as varchar(30)), 102) AS "Eff_DateNotSi",
				Interval '-1 month' + Cast( p_AdjDowCode || '/' || cast("PRSIDayDecrease" as varchar(30)) as timestamp(3)) AS "Eff_DayOffSi",
				case when "PRIsSalGradeSISal" = 1 and "PRIsMinSalByInsList" = 1 then 1 else 0 END AS "PRIsMinSalByInsList",
				"PRPITFamilyTaxFreeOwn" AS "gPRPITFamilyTaxFreeOwn_Peru", "PRPITFamilyTaxFreeUnit" AS "gPRPITFamilyTaxFreeUnit_Peru", "PRIsPaySINet",
				"PRSIKowCodes", "PRIsDeductionBasedOnOfficialDate", "PRSITotalPaidDays", "PRSIPaidDayKowCodes", S."PRSIAdjDowCodeType", S."PRSITotalPaidDaysType"
			FROM "HR_ConfigPR" AS S
		) AS T1 ON coalesce(T."BUCode",'') =  coalesce(T1."BUCode1",'') 
			LEFT JOIN "tmp_tblRateDeductions" AS T2 ON T."BUCode" = T2."BUCode2" AND T."SICode" = T2."SICode"
			LEFT JOIN "tmp_tblRateDeductions" AS T3 ON T."BUCode" = T3."BUCode2" AND T."HICode" = T3."SICode"
			LEFT JOIN "tmp_tblRateDeductions" AS T4 ON T."BUCode" = T4."BUCode2" AND T."UICode" = T4."SICode"
			left join "TMP_SocialInsAdjust" as T5 on T."EmployeeID" = T5."EmployeeID"
		WHERE "JoinedOn" <= "Eff_DateNotSi" 
			and (("IsSI" = 1) OR ("IsHI" = 1) OR ("IsUI" = 1))
			--AND (
			--	(E_Active = 1 AND (E_EndDate = '' OR (E_EndDate is null) OR (E_EndDate Between dateadd(day, 1, Eff_DayOffSi) AND @TDate) OR E_EndDate > @TDate)) 
			--	OR (E_Active = 0 AND E_EndDate >= dateadd(day, 1, Eff_DayOffSi))
			--)  
			AND (
				T1."PRIsDeductionBasedOnOfficialDate" = 0 
				OR (T1."PRIsDeductionBasedOnOfficialDate" = 1 and "HiredOn" <= "Eff_DateNotSi")
			)
			AND T5."EmployeeID" is null
	) AS ce; 
	

	-- Lay ds nv co tham gia trich nop BHXH truoc do (yyyy/MM - 1)
	create temporary table "tmp_SI" as
	select ce.* from (
		SELECT SI."EmployeeID", "RealSalSI", SI."RealSalHI", SI."RealSalUI", "SIRateE" + SI."SIRateC" + "HIRateE" + "HIRateC" + "UIRateE" + "UIRateC" as "totPrevPercentPay" 
		FROM "HR_SocialIns" as SI inner join "tmp_employee_filters" as F on SI."EmployeeID" = F."EmployeeID"
		Where "DowCode" = v_PrevAdjDowCode --Left(Convert(varchar, dateadd(month, -1, Convert(datetime, @AdjDowCode + '/01', 111)), 111),7)
	) as ce;
	
	create temporary table "tmp_AdjSI" as
	select ce.* from (
		select R."EmployeeID", R."KowType", R."NumAdd", ROW_NUMBER() OVER(PARTITION BY "EmployeeID" ORDER BY "AdjDowCode" DESC) AS "xRowID"
		from (
			SELECT SI."EmployeeID", SI."AdjDowCode", "KowType", ROW_NUMBER() OVER(PARTITION BY SI."EmployeeID" ORDER BY SI."AdjDowCode" desc, 
				CASE when "KowType" in (9,19) then 0 else "KowType" end) as "Row_ID", SI."NumAdd"
			FROM "HR_SocialInsAdjust" as SI inner join "tmp_employee_filters" as F on SI."EmployeeID" = F."EmployeeID"
			WHERE SI."AdjDowCode" <= Substr(To_char (interval '-1 month' + p_AdjDowCode || '/01', 'yyyy/mm/dd'), 1, 7)
		) as R where (R."Row_ID" = 1 AND (R."NumAdd" in (5,6,14))) OR (R."Row_ID" = 2 AND (R."NumAdd" IN (6,14)))
	) as ce WHERE ce."xRowID" = 1 AND ce."NumAdd" IN (6,14);
	

	CREATE TEMPORARY TABLE "tmp_tblSiAllowance" ("EmployeeID" VARCHAR(20), "JobAllo" DOUBLE PRECISION, "SeniorAllo" DOUBLE PRECISION, "SeniorOverAllo" DOUBLE PRECISION, "OtherAllo" DOUBLE PRECISION, "CoeffJobAllo" DOUBLE PRECISION, "CoeffSeniorAllo" DOUBLE PRECISION, "CoeffSeniorOverAllo" DOUBLE PRECISION, "CoeffOtherAllo" DOUBLE PRECISION, "Amount" DOUBLE PRECISION, "AmountF" DOUBLE PRECISION);
	INSERT INTO "tmp_tblSiAllowance"("EmployeeID", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", 
		"Amount", "AmountF")
	SELECT * FROM "HR_spGetSiAllowance"(v_AdjDowCode, v_strEmps);
	
	-- 2021.06.24: ProPzy_Issue_C&B_TRích đống BHXH: xác đinh mức đóng khi có nhiều qđ lương
	-- tính từ ngày hiệu lực lương( or kỳ công) đến ngày xét BHXH , nếu đủ 50% công chuẩn thì lấy lương mới nhất trích nộp BHXH. 
	-- Nếu không đủ 50%  công thì xét qđ lương trước đó kiền kề, vẫn theo quy tắt đủ 50% công chuẩn thì lấy lương mới nhất trích nộp BHXH, 
	-- nếu không đủ thì xét tiếp qđ lương trước đó kiền kề

	SELECT "PRSITotalPaidDays", "PRSITotalPaidDaysType", "PRSIPaidDayKowCodes", "PRSIAdjDowCodeType" 
	INTO v_PRSITotalPaidDays, v_PRSITotalPaidDaysType, v_PRSIPaidDayKowCodes, v_PRSIAdjDowCodeType
	FROM "HR_ConfigPR" LIMIT 1;

	CREATE TEMPORARY TABLE "tmp_HCSEM_EmpBasicSalary" AS
	SELECT *, ROW_NUMBER() OVER(PARTITION BY "EmployeeID" ORDER BY "EmployeeID", "EffectDate") as "Row_Y"
		FROM (
			SELECT T."EmployeeID", "EffectDate", "MinSalary", "CoeffSalary", "InsSalary", "IsCurrent", 
				ROW_NUMBER() OVER(PARTITION BY T."EmployeeID" ORDER BY T."EmployeeID", "EffectDate" desc) as "Row_ID",
				"Eff_DateNotSi", CAST(0 AS BOOLEAN) AS "IsFlag", T1."JoinedOn", T."EndDate", T1."TSHoursPerWD"
			from "HR_EmpBasicSalary" as T 
			INNER JOIN "tmp_Employee_Config" AS T1 ON T."EmployeeID" = T1."EmployeeID"
			where ("EffectDate" < "Eff_DateNotSi") and (T1."E_EndDate" = '' or T1."E_EndDate" is null or "EffectDate" < T1."E_EndDate")
		) AS R 
		WHERE (v_PRSITotalPaidDays = 0 AND R."Row_ID" = 1) OR (v_PRSITotalPaidDays > 0 AND R."Row_ID" <= 2);

	IF v_PRSITotalPaidDays > 0
	THEN
		CREATE TEMPORARY TABLE "tmp_AAA" AS
		SELECT ce.* FROM "tmp_HCSEM_EmpBasicSalary" AS ce;

		-- Không xử lý cho những nhân viên trong tháng không có quyết định điều chỉnh lương
		DELETE FROM tmp_AAA WHERE EmployeeID IN (
			SELECT EmployeeID
			FROM tmp_HCSEM_EmpBasicSalary WHERE Row_ID = 2 AND SUBSTR(TO_CHAR (EffectDate, 'YYYY/MM/DD'), 1, 7) <> p_AdjDowCode
		);

		-- Không xử lý cho những nhân viên trong tháng không có quyết định điều chỉnh lương
		DECLARE cursor_1 CURSOR FOR  
			SELECT "EmployeeID", "EffectDate", "Eff_DateNotSi", "Row_Y", "EndDate", "TSHoursPerWD" FROM "tmp_AAA" ORDER BY "Row_Y" desc;
		BEGIN
		OPEN cursor_1;
		WHILE 1 = 1  
		LOOP   
			FETCH NEXT FROM cursor_1 INTO v_EmployeeID, v_bs_EffectDate, v_Eff_DateNotSi, v_Row_ID, v_EndDate, v_TSHoursPerWD;
			IF NOT FOUND THEN
				EXIT;
			END IF;
			
			IF v_Row_ID > 1
			then
				v_tmpDayNum := 0;
				
				IF v_PRSIAdjDowCodeType = 1
				THEN
					SELECT "ToDate" INTO v_tmpDatetime FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = p_AdjDowCode
					LIMIT 1;
				else
					v_tmpDatetime := v_Eff_DateNotSi;
				END IF;

				-- Tổng số ngày công hưởng lương
				IF v_PRSITotalPaidDaysType = 1 THEN
					SELECT (v_PRSITotalPaidDays * "StandardWD" / 100) * v_TSHoursPerWD INTO v_tmpPRSITotalPaidDays 
					FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = p_AdjDowCode
					LIMIT 1;
				ELSIF v_PRSITotalPaidDaysType = 0 THEN
					v_tmpPRSITotalPaidDays := v_PRSITotalPaidDays;
				ELSIF v_PRSITotalPaidDaysType = 2 THEN
					SELECT ("StandardWD" - v_PRSITotalPaidDays) * v_TSHoursPerWD INTO v_tmpPRSITotalPaidDays 
					FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = p_AdjDowCode
					LIMIT 1;
				ELSE
					v_tmpPRSITotalPaidDays := 0;
				END IF;

				-- Đối với nhân viên nghỉ việc thì đếm: công thực tế từ ngày đầu kỳ lương đến ngày báo cáo (ngày hiện tại) + công mặc định từ ngày hiện tại đến ngày nghỉ việc
				IF (v_EndDate Between interval '1 day' + v_Eff_DayOffSi AND v_TDate) --OR (@EndDate > @TDate)
				THEN 
					v_tmpDatetime := SUBSTR(TO_CHAR (p_GenDate, 'YYYY/MM/DD'), 1, 10);
					v_tmpDayNum := v_tmpDayNum + v_TSHoursPerWD * "HR_fnFGetHT_DemCongMacDinh"(v_EmployeeID, p_AdjDowCode, v_tmpDatetime + 1, v_EndDate - 1, 3);
				ELSE
			
					/* 
						Nhân sự đang làm việc : từ ngày bắt đầu kỳ công đến ngày cuối cùng của tkỳ công/ngày làm việc cuối cùng
						(công tực tế tính đến ngày trích + công dự kiến theo ngày làm việc)> NCC -14 công nghỉ
					*/
					v_tmp_fEndDay := v_tmpDatetime;
					v_tmpDatetime := SUBSTR(TO_CHAR (p_GenDate, 'YYYY/MM/DD'), 1, 10);
					v_tmpDayNum := v_tmpDayNum + v_TSHoursPerWD * "HR_fnFGetHT_DemCongMacDinh"(v_EmployeeID, p_AdjDowCode, v_tmpDatetime + 1, v_tmp_fEndDay, 3);
                END IF;

				WITH "tblA" AS (
					SELECT LTRIM(RTRIM(CAST(data AS VARCHAR(20)))) AS "KowCode" FROM "HR_FNSplitString_varchar"(v_PRSIPaidDayKowCodes::citext, ',')
				)
				SELECT v_tmpDayNum + COALESCE(SUM(T."DayNum"), 0) INTO v_tmpDayNum
				FROM "HR_TSKowDs" AS T INNER JOIN "tblA" AS T1 ON T."KowCode" = T1."KowCode"
				WHERE T."EmployeeID" = v_EmployeeID AND T."WorkDate" BETWEEN v_bs_EffectDate AND v_tmpDatetime;


				IF v_tmpDayNum <= v_tmpPRSITotalPaidDays
				THEN
					UPDATE "tmp_HCSEM_EmpBasicSalary"
					SET "IsFlag" = 1
					WHERE "EmployeeID" = v_EmployeeID AND "Row_Y" = v_Row_ID;
                END IF;				 
			end if;
		END LOOP;
		CLOSE cursor_1;   
		END;

		DELETE FROM "tmp_HCSEM_EmpBasicSalary" WHERE "IsFlag" = 1;
	END IF; 

	CALL "HR_spGetDeductionSI"(v_AdjDowCode, v_FDate, v_TDate, v_strEmps);
	
	CREATE TEMPORARY TABLE "tmp_tblGetDeductionSI" ("EmployeeID" VARCHAR(20), "MinSalary" money, "CoeffSalary" double precision, "Real_Salary" money, "EndDate" timestamp(3), "mTyleBHXH" double precision, "mTyleBHYT" double precision, "mTyleBHTN" double precision, 
			"mAmountSI" money, "mBHXHMax" money, "mBHYTMax" money, "mBHTNMax" money, "SalaryInsO" money, "SalaryInsO_YT" money, "SalaryInsO_TN" money,
			"JobAllo" double precision, "SeniorAllo" double precision, "SeniorOverAllo" double precision, "OtherAllo" double precision, "Amount" money, "CoeffJobAllo" double precision, "CoeffSeniorAllo" double precision, "CoeffSeniorOverAllo" double precision, "CoeffOtherAllo" double precision, "TotalCoeffAllo" double precision,
			"DateNum" double precision, "KowType" int, "mTyleBHXHCN" double precision, "mTyleBHXHCT" double precision, "mTyleBHYTCN" double precision, "mTyleBHYTCT" double precision, "mTyleBHTNCN" double precision, "mTyleBHTNCT" double precision, "AmountF" money,
			"Active" boolean, "ReturnKCBDate" TIMESTAMP(3), "GroupType" int, "bs_EffectDate" TIMESTAMP(3), "Dayoff_EndDate" TIMESTAMP(3), "InsReportingDate" TIMESTAMP(3), "KowCode" VARCHAR(20));
	insert into "tmp_tblGetDeductionSI"("EmployeeID", "MinSalary", "CoeffSalary", "Real_Salary", "EndDate", "mTyleBHXH", "mTyleBHYT", 
			"mTyleBHTN", "mAmountSI", "mBHXHMax", "mBHYTMax", "mBHTNMax", "SalaryInsO", "SalaryInsO_YT", "SalaryInsO_TN",
			"JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "Amount", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo",
			"DateNum", "KowType", "mTyleBHXHCN", "mTyleBHXHCT", "mTyleBHYTCN", "mTyleBHYTCT", "mTyleBHTNCN", "mTyleBHTNCT", "AmountF",
			"Active", "ReturnKCBDate", "GroupType", "bs_EffectDate", "Dayoff_EndDate", "InsReportingDate", "KowCode")
	SELECT * FROM "HR_spGetDeductionSI"(v_AdjDowCode, v_FDate, v_TDate, v_strEmps);

	-- Lay ds nv tham gia trich nop BHXH dang xet (yyyy/MM)
	create temporary table "tmp_Result" as
	select ce.* from (
		SELECT A."EmployeeID", A."MinSalary", A."CoeffSalary", A."Real_Salary", A."EndDate", A."mTyleBHXH", A."mTyleBHYT", A."mTyleBHTN",
			A."mAmountSI", A."mBHXHMax", A."mBHYTMax", A."mBHTNMax", A."SalaryInsO", A."SalaryInsO_YT", A."SalaryInsO_TN", A."JobAllo", A."SeniorAllo", A."SeniorOverAllo", A."OtherAllo", 
			A."Amount", A."CoeffJobAllo", 
			A."CoeffSeniorAllo", A."CoeffSeniorOverAllo", A."CoeffOtherAllo", A."TotalCoeffAllo", A."DateNum", A."KowType", A."mTyleBHXHCN", A."mTyleBHXHCT", 
			A."mTyleBHYTCN", A."mTyleBHYTCT", A."mTyleBHTNCN", A."mTyleBHTNCT", A."AmountF",
			A."Active", A."ReturnKCBDate", B."RealSalSI", B."RealSalHI", B."RealSalUI", 
			A."GroupType", A."bs_EffectDate", B."totPrevPercentPay", coalesce(C."KowType",0) as "KowTypePreM", F."JoinedOn", F."CurrencyCode",
			"Dayoff_EndDate", F."IsReturnKCB", F."HICode", "PRSITotalPaidDays", "PRSIPaidDayKowCodes", "PRSIAdjDowCodeType", "PRSITotalPaidDaysType", "InsReportingDate",
			F."HiredOn", A."KowCode", "TSHoursPerWD"
		FROM "tmp_tblGetDeductionSI" as A 
			inner join "tmp_employee_filters" as F on A."EmployeeID" = F."EmployeeID"
			LEFT JOIN "tmp_SI" as B ON A."EmployeeID" = B."EmployeeID"
			LEFT JOIN "tmp_Deps" as Deps on F."OrgUnitID" = Deps."OrgUnitID" 
			LEFT JOIN "tmp_AdjSI" as C on A."EmployeeID" = C."EmployeeID"
			LEFT JOIN (
				SELECT "EmployeeID", "PRSITotalPaidDays", "PRSIPaidDayKowCodes", "PRSIAdjDowCodeType", "PRSITotalPaidDaysType" FROM "tmp_Employee_Config"
			) AS D ON A."EmployeeID" = D."EmployeeID"
		where Deps."OrgUnitID" is null
	) as ce;

	-- Tao bang tạm chưa danh sách nv thuoc bang HR_SocialInsAdjust
	create temporary table "tmp_HR_SocialInsAdjust" as
	select ce.* from (
		select "EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
			"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
			"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", "SIRateE", "HIRateE", "UIRateE",  
			"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
			"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
			"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
			"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
			"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", "SIRateC", "HIRateC", "UIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
			"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate"
		from "HR_SocialInsAdjust" where 1 = 0										 
	) as ce;


	create temporary table "tmp_HCSSI_SocialInsAdjust_v2" as
	select ce.* from (
		select "EmployeeID", "SIRateE", "HIRateE", "UIRateE", "SIRateC", "HIRateC", "UIRateC",  
			"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC"
		from "HR_SocialInsAdjust" where 1 = 0										 
	) as ce;
	
	
	-- tao bang tam chua danh sach nv thuoc bang chinh HR_SocialIns
	create temporary table "tmp_HR_SocialIns" as
	select ce.* from (
		select "EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
				"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
				"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
				"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns"
		from "HR_SocialIns" where 1 = 0
	) as ce;


	create temporary table "tmp_Cong_TS" as
		select ce.* from (
				select "KowCode" from "HR_LSKOW" where "KowType" in (9,19) GROUP BY "KowCode"
			) as ce;

	create temporary table tmp_auto_adj as
		select ce.* from (
				select cast('' AS VARCHAR(20)) as "EmployeeID", cast(1 as int) as "mType" where 1 = 0
			) as ce;

	-- Lay ve danh sach dieu chinh BHXH

 	DECLARE employee_cursor_bhxh_fix CURSOR FOR 
		select R."EmployeeID", "MinSalary", "CoeffSalary", "Real_Salary", R."EndDate", "mTyleBHXH", "mTyleBHYT", "mTyleBHTN", "mAmountSI", "mBHXHMax", 
			"mBHYTMax", "mBHTNMax", "SalaryInsO", "SalaryInsO_YT", "SalaryInsO_TN", 
			"JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "Amount", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", 
			"TotalCoeffAllo", "DateNum", "KowType", "mTyleBHXHCN", "mTyleBHXHCT", "mTyleBHYTCN", "mTyleBHYTCT", "mTyleBHTNCN", "mTyleBHTNCT", "AmountF",
			R."Active", R."ReturnKCBDate", R."RealSalSI", "GroupType", R."totPrevPercentPay", coalesce(R."CurrencyCode", '') as "CurrencyCode", "KowTypePreM", 
			SUBSTR(TO_CHAR (R."JoinedOn", 'YYYY/MM/DD'), 1, 7) AS "JoinDate", "bs_EffectDate", "Dayoff_EndDate", R."RealSalHI", R."RealSalUI", R."IsReturnKCB",
			R."HICode", "PRSITotalPaidDays", "PRSIPaidDayKowCodes", "PRSIAdjDowCodeType", "PRSITotalPaidDaysType", "InsReportingDate", "HiredOn", 
			R."KowCode", "TSHoursPerWD", COALESCE("HiredOn", R."JoinedOn")
		from "tmp_Result" as R -- Where A.EmployeeID = 155
		order by "EmployeeID";

	BEGIN
	OPEN employee_cursor_bhxh_fix;  
	WHILE 1 = 1  
	LOOP  
		FETCH NEXT FROM employee_cursor_bhxh_fix INTO v_EmployeeID, v_MinSalary, v_CoeffSalary, v_Real_Salary, v_EndDate, v_mTyleBHXH, v_mTyleBHYT, v_mTyleBHTN, v_mAmountSI, v_mBHXHMax, 
						v_mBHYTMax, v_mBHTNMax, v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, 
						v_JobAllo, v_SeniorAllo, v_SeniorOverAllo, v_OtherAllo, v_Amount, v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, 
						v_TotalCoeffAllo, v_DateNum, v_KowType, v_mTyleBHXHCN, v_mTyleBHXHCT, v_mTyleBHYTCN, v_mTyleBHYTCT, v_mTyleBHTNCN, v_mTyleBHTNCT, v_AmountF, 
						v_active, v_ReturnKCBDate, v_OldRealSalSI, v_GroupType, v_totPrevPercentPay, v_CurrencyCode, v_KowTypePreM, v_YYYYMMJoinDate, v_bs_EffectDate, 
						v_Dayoff_EndDate, v_OldRealSalHI, v_OldRealSalUI, v_IsReturnKCB, v_HICode, v_PRSITotalPaidDays, v_PRSIPaidDayKowCodes, v_PRSIAdjDowCodeType, 
						v_PRSITotalPaidDaysType, v_InsReportingDate, v_OfficialDate, v_KowCode, v_TSHoursPerWD, v_JoinDate;

		IF NOT FOUND THEN
			EXIT;
		END IF;
		
		v_Flag_THAISAN_COTANGLUONG := 0;
		v_FlagIsDeduction := 0;
	
		IF v_KowType < 0
		THEN
			v_tmpAdjDowCode := NULL;

			select R."AdjDowCode" into v_tmpAdjDowCode
			from (
				select "RecID", "NumAdd", "AdjDowCode", ROW_NUMBER() OVER(ORDER BY "AdjDowCode" desc) as "RowID" 
				from "HR_SocialInsAdjust" where "EmployeeID" = v_EmployeeID and "AdjDowCode" < p_AdjDowCode
				AND "NumAdd" NOT IN (27,28)
			) as R where "RowID" = 1 and "NumAdd" = 5
			limit 1; 

			if v_tmpAdjDowCode IS NOT NULL 
			THEN
				IF EXISTS(SELECT 1 FROM "tmp_HR_SocialInsAdjust" WHERE "EmployeeID" = v_EmployeeID AND v_Num_Add NOT IN (7,8,27,28)
LIMIT 1) THEN
					--GOTO NextStep
					
					-- Nếu trong quá trình nghỉ thai sản có quyet dinh tang luong lần 2
					IF EXISTS(
					SELECT 1
					FROM "tmp_Employee_Config" AS T INNER JOIN "HR_EmpDayOff" AS T1 ON T."EmployeeID" = T1."EmployeeID"
						INNER JOIN "tmp_Cong_TS" AS T2 ON T1."KowCode" = T2."KowCode"
					WHERE T."EmployeeID" = @EmployeeID AND T."Eff_DayOffSi" BETWEEN T1."BeginDate" AND T1."EndDate"
					LIMIT 1
				)
				THEN
					if exists(
						select 1
						from (
							select "NumAdd", ROW_NUMBER() OVER(ORDER BY "AdjDowCode" desc) as "RowID" 
							from "HR_SocialInsAdjust" where "EmployeeID" = @EmployeeID and "AdjDowCode" < @AdjDowCode
						) as R where "RowID" = 1 and "NumAdd" IN (7,8)
						limit 1
					)
					THEN

						v_Flag_THAISAN_COTANGLUONG := 1;
						-- Trong trường hợp nghỉ thai sản, xét xem nhân viên có được tăng lương hay không
						SELECT R."RealSalSI", R."RealSalHI", R."RealSalUI", R."AdjDowCode", "NumAdd" INTO v_OldRealSalSI, v_OldRealSalHI, v_OldRealSalUI, v_DowCode_SI, v_Num_Add
						FROM (
							SELECT "RealSalSI", "RealSalHI", "RealSalUI", "AdjDowCode", "NumAdd", ROW_NUMBER() OVER(ORDER BY "AdjDowCode" desc) as "RowID"
							FROM "HR_SocialInsAdjust" WHERE "EmployeeID" = @EmployeeID AND "AdjDowCode" < @AdjDowCode
						) AS R WHERE R."RowID" = 1;

						if v_OldRealSalSI is null
						then
							SELECT R."RealSalSI", R."RealSalHI", R."RealSalUI", R."DowCode", "NumAdd" INTO v_OldRealSalSI, v_OldRealSalHI, v_OldRealSalUI, v_DowCode_SI, v_Num_Add
							FROM (
								SELECT "RealSalSI", "RealSalHI", "RealSalUI", "DowCode", "NumAdd", ROW_NUMBER() OVER(ORDER BY "DowCode" desc) as "RowID"
								FROM "HR_SocialIns" WHERE "EmployeeID" = @EmployeeID AND "DowCode" < @AdjDowCode
							) AS R WHERE R."RowID" = 1;
						end if;

						v_RealSalSI := @SalaryInsO;
						v_RealSalHI := @SalaryInsO_YT;
						v_RealSalUI := @SalaryInsO_TN;

						IF (v_OldRealSalSI <> @RealSalSI OR v_OldRealSalHI <> @RealSalHI OR v_OldRealSalUI <> @RealSalUI) AND v_Num_Add IN (7,8) THEN
							
							--GOTO THAISAN_COTANGLUONG
							
							-- 2020.08.12: Xử lý trường hợp nhân viên đang nghỉ thai sản, có quyết định tăng lương
							IF @Flag_THAISAN_COTANGLUONG = 1
							THEN

								v_IsReduceSiUi := 0;

								SELECT "mSSL", "Eff_DateNotSi", "Eff_DayOffSi", "PRSIDayDecrease",
					 				"PRSITotalDayNotPay", "PRSIDayReturnHI", "PRIsSI1RowForDescreaseML", "PRTUnionRateCo",
					 				"UI_RateEmp" + "UI_RateCo", "PRCurrencyForPay" 
								INTO v_mSSL, v_Eff_DateNotSi, v_Eff_DayOffSi, v_PRSIDayDecrease, v_PRSITotalDayNotPay, v_PRSIDayReturnHI, v_PRIsSI1RowForDescreaseML, v_PRTUnionRateCo, v_mUN, v_PRCurrencyForPay
								FROM "tmp_Employee_Config" WHERE "EmployeeID" = @EmployeeID
								LIMIT 1;

								if @CurrencyCode = v_PRCurrencyForPay then
									v_decp := 0;
								else
									v_decp := v_mSSL;
								end if;

								----Phat sinh bao hiem cho nhan vien  
								--SET @Num_Add = 9				
								--INSERT INTO #HR_SocialIns(EmployeeID, DowCode, BasicSalContract, CoeffSalContract, RealSalContract, JobAllo, SeniorAllo, SeniorOverAllo, OtherAllo,
								--							  TotalAllo, CoeffJobAllo, CoeffSeniorAllo, CoeffSeniorOverAllo, CoeffOtherAllo, TotalCoeffAllo, MaxSalSI, MaxSalHI, MaxSalUI, TotalSalIns,
								--							  TotalCoeffIns, RealSalSI, RealSalHI, RealSalUI, SIRateE, SIRateC, HIRateE, HIRateC, UIRateE, UIRateC, SIAmountE, SIAmountC,
								--							  HIAmountE, HIAmountC, UIAmountE, UIAmountC, InsAmountE, InsAmountC, TUnionAmountC, NumAdd, Note, SalaryIns)
								--VALUES(@EmployeeID, @AdjDowCode, Round(@MinSalary,@decp), @CoeffSalary, Round(@Real_Salary,@decp), Round(@JobAllo,@decp), Round(@SeniorAllo,@decp), Round(@SeniorOverAllo,@decp), 
								--Round(@OtherAllo,@decp), Round(@Amount,@decp), @CoeffJobAllo, @CoeffSeniorAllo, @CoeffSeniorOverAllo, @CoeffOtherAllo, @AmountF, Round(@mBHXHMax,@decp), Round(@mBHYTMax,@decp), Round(@mBHTNMax,@decp), Round(@Real_Salary + @Amount,@decp), @TotalCoeffAllo, 
								--Round(@SalaryInsO,@decp), Round(@SalaryInsO_YT,@decp), Round(@SalaryInsO_TN,@decp), @mTyleBHXHCN, @mTyleBHXHCT, @mTyleBHYTCN, @mTyleBHYTCT, @mTyleBHTNCN, @mTyleBHTNCT, 
								--Round(@mTyleBHXHCN * @SalaryInsO / 100,@decp), Round(@mTyleBHXHCT * @SalaryInsO / 100,@decp), Round(@mTyleBHYTCN * @SalaryInsO_YT / 100,@decp), 
								--Round(@mTyleBHYTCT * @SalaryInsO_YT / 100,@decp), Round(@mTyleBHTNCN * @SalaryInsO_TN / 100,@decp), Round(@mTyleBHTNCT * @SalaryInsO_TN / 100,@decp),
								--Round((@mTyleBHXHCN*@SalaryInsO/100) + (@mTyleBHYTCN*@SalaryInsO_YT/100) + (@mTyleBHTNCN*@SalaryInsO_TN/100),@decp), 
								--Round((@mTyleBHXHCT*@SalaryInsO/100) + (@mTyleBHYTCT*@SalaryInsO_YT/100) + (@mTyleBHTNCT*@SalaryInsO_TN/100),@decp),
								--Round(case when @mTyleBHXHCN + @mTyleBHXHCT > 0 then @PRTUnionRateCo else 0 end * @SalaryInsO/100,@decp), @Num_Add, @note, @SalaryInsO)


								IF v_OldRealSalSI > @RealSalSI OR v_OldRealSalHI > @RealSalHI OR v_OldRealSalUI > @RealSalUI THEN
									v_Num_Add := 28;
								ELSE
									v_Num_Add := 27;
								END IF;

								-- Phat sinh dong moi voi muc moi va cu (III)		
								INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
									"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
									"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns",
									"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
									"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
									"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
									"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
									"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", 
									"HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
									"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
								SELECT @EmployeeID, Round(@MinSalary,@decp), @CoeffSalary, Round(@Real_Salary,@decp), Round(@JobAllo,@decp), Round(@SeniorAllo,@decp), Round(@SeniorOverAllo,@decp), 
									Round(@OtherAllo,@decp), Round(@Amount,@decp), @CoeffJobAllo, @CoeffSeniorAllo, @CoeffSeniorOverAllo, 
									@CoeffOtherAllo, @TotalCoeffAllo, Round(@mAmountSI,@decp), Round(@mBHXHMax,@decp), Round(@SalaryInsO,@decp), 
									Round((@mTyleBHXHCN) * @SalaryInsO/100,@decp), Round((@mTyleBHXHCT) * @SalaryInsO/100,@decp), Round(@mTyleBHYTCN * @SalaryInsO_YT/100,@decp),
									Round(@mTyleBHYTCT * @SalaryInsO_YT/100,@decp), Round(@mTyleBHTNCN * @SalaryInsO_TN/100,@decp), Round(@mTyleBHTNCT * @SalaryInsO_TN/100,@decp), @note, @AdjDowCode, v_Num_Add, @NumAdj,
									@AdjDowCode, '', (date_part('year', @TDate) - date_part('year', (@AdjDowCode || '/01')::timestamp)) * 12 + (date_part('month', @TDate) - date_part('month', (@AdjDowCode || '/01')::timestamp)) + 1, @mTyleBHXH,
									Round("BasicSalContract",@decp), "CoeffSalContract", Round("RealSalContract",@decp), Round("JobAllo",@decp), Round("SeniorAllo",@decp), Round("SeniorOverAllo",@decp), Round("OtherAllo",@decp),
									Round("TotalAllo",@decp), "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffIns", Round("TotalSalIns",@decp), Round("MaxSalSI",@decp),  Round("RealSalSI",@decp),
									"SIRateE" + "SIRateC" as "SIRateEO", "HIRateE" + "HIRateC" as "HIRateEO", "UIRateE" + "UIRateC" as "UNPrivateO", 
									Round("SIAmountE",@decp) as "SIAmountEO", Round(SIAmountC,@decp) as "SIAmountCO", 
									Round("HIAmountE",@decp) as "HIAmountEO", Round(HIAmountC,@decp) as "HIAmountCO",
									Round(UIAmountE,@decp) as "UIAmountEO", Round(UIAmountC,@decp) as "UIAmountCO",
									@mTyleBHYTCN, @mTyleBHTNCN, @mTyleBHXHCN, @mTyleBHYTCT, @mTyleBHTNCT, @mTyleBHXHCT, 
									@KowType, @KowTypePreM, @IsReduceSiUi, @bs_EffectDate,
									@SalaryInsO, @SalaryInsO_YT, @SalaryInsO_TN, @KowCode, @InsReportingDate
								FROM "HR_SocialInsAdjust" 
								Where "EmployeeID" = @EmployeeID and "AdjDowCode" = v_DowCode_SI;

								-- Tự động tính truy thu BHXH
								insert into tmp_auto_adj("EmployeeID", "mType") values(@EmployeeID, 3);
							END IF;
							
							-- END GOTO THAISAN_COTANGLUONG
						END IF;
					END IF;
				END IF;
				CONTINUE;
					
					--END GOTO NextStep
					
				END IF;

				v_Flag_THAISAN_COTANGLUONG := 1;
				-- Trong trường hợp nghỉ thai sản, xét xem nhân viên có được tăng lương hay không
				SELECT R."RealSalSI", R."RealSalHI", R."RealSalUI", R."AdjDowCode", "NumAdd" INTO v_OldRealSalSI, v_OldRealSalHI, v_OldRealSalUI, v_DowCode_SI, v_Num_Add
				FROM (
					SELECT "RealSalSI", "RealSalHI", "RealSalUI", "AdjDowCode", "NumAdd", ROW_NUMBER() OVER(ORDER BY "AdjDowCode" desc) as "RowID"
					FROM "HR_SocialInsAdjust" WHERE "EmployeeID" = v_EmployeeID AND "AdjDowCode" < p_AdjDowCode
				) AS R WHERE R."RowID" = 1;

				if v_OldRealSalSI is null
				then
					SELECT R."RealSalSI", R."RealSalHI", R."RealSalUI", R."DowCode", "NumAdd" INTO v_OldRealSalSI, v_OldRealSalHI, v_OldRealSalUI, v_DowCode_SI, v_Num_Add
					FROM (
						SELECT "RealSalSI", "RealSalHI", "RealSalUI", "DowCode", "NumAdd", ROW_NUMBER() OVER(ORDER BY "DowCode" desc) as "RowID"
						FROM "HR_SocialIns" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" < p_AdjDowCode
					) AS R WHERE R."RowID" = 1;
				end if;

				v_RealSalSI := v_SalaryInsO;
				v_RealSalHI := v_SalaryInsO_YT;
				v_RealSalUI := v_SalaryInsO_TN;

				IF (v_OldRealSalSI <> v_RealSalSI OR v_OldRealSalHI <> v_RealSalHI OR v_OldRealSalUI <> v_RealSalUI) AND v_Num_Add NOT IN (7,8) THEN
				
							--GOTO THAISAN_COTANGLUONG
							
							-- 2020.08.12: Xử lý trường hợp nhân viên đang nghỉ thai sản, có quyết định tăng lương
							IF @Flag_THAISAN_COTANGLUONG = 1
							THEN

								v_IsReduceSiUi := 0;

								SELECT "mSSL", "Eff_DateNotSi", "Eff_DayOffSi", "PRSIDayDecrease",
					 				"PRSITotalDayNotPay", "PRSIDayReturnHI", "PRIsSI1RowForDescreaseML", "PRTUnionRateCo",
					 				"UI_RateEmp" + "UI_RateCo", "PRCurrencyForPay" 
								INTO v_mSSL, v_Eff_DateNotSi, v_Eff_DayOffSi, v_PRSIDayDecrease, v_PRSITotalDayNotPay, v_PRSIDayReturnHI, v_PRIsSI1RowForDescreaseML, v_PRTUnionRateCo, v_mUN, v_PRCurrencyForPay
								FROM "tmp_Employee_Config" WHERE "EmployeeID" = @EmployeeID
								LIMIT 1;

								if @CurrencyCode = v_PRCurrencyForPay then
									v_decp := 0;
								else
									v_decp := v_mSSL;
								end if;

								----Phat sinh bao hiem cho nhan vien  
								--SET @Num_Add = 9				
								--INSERT INTO #HR_SocialIns(EmployeeID, DowCode, BasicSalContract, CoeffSalContract, RealSalContract, JobAllo, SeniorAllo, SeniorOverAllo, OtherAllo,
								--							  TotalAllo, CoeffJobAllo, CoeffSeniorAllo, CoeffSeniorOverAllo, CoeffOtherAllo, TotalCoeffAllo, MaxSalSI, MaxSalHI, MaxSalUI, TotalSalIns,
								--							  TotalCoeffIns, RealSalSI, RealSalHI, RealSalUI, SIRateE, SIRateC, HIRateE, HIRateC, UIRateE, UIRateC, SIAmountE, SIAmountC,
								--							  HIAmountE, HIAmountC, UIAmountE, UIAmountC, InsAmountE, InsAmountC, TUnionAmountC, NumAdd, Note, SalaryIns)
								--VALUES(@EmployeeID, @AdjDowCode, Round(@MinSalary,@decp), @CoeffSalary, Round(@Real_Salary,@decp), Round(@JobAllo,@decp), Round(@SeniorAllo,@decp), Round(@SeniorOverAllo,@decp), 
								--Round(@OtherAllo,@decp), Round(@Amount,@decp), @CoeffJobAllo, @CoeffSeniorAllo, @CoeffSeniorOverAllo, @CoeffOtherAllo, @AmountF, Round(@mBHXHMax,@decp), Round(@mBHYTMax,@decp), Round(@mBHTNMax,@decp), Round(@Real_Salary + @Amount,@decp), @TotalCoeffAllo, 
								--Round(@SalaryInsO,@decp), Round(@SalaryInsO_YT,@decp), Round(@SalaryInsO_TN,@decp), @mTyleBHXHCN, @mTyleBHXHCT, @mTyleBHYTCN, @mTyleBHYTCT, @mTyleBHTNCN, @mTyleBHTNCT, 
								--Round(@mTyleBHXHCN * @SalaryInsO / 100,@decp), Round(@mTyleBHXHCT * @SalaryInsO / 100,@decp), Round(@mTyleBHYTCN * @SalaryInsO_YT / 100,@decp), 
								--Round(@mTyleBHYTCT * @SalaryInsO_YT / 100,@decp), Round(@mTyleBHTNCN * @SalaryInsO_TN / 100,@decp), Round(@mTyleBHTNCT * @SalaryInsO_TN / 100,@decp),
								--Round((@mTyleBHXHCN*@SalaryInsO/100) + (@mTyleBHYTCN*@SalaryInsO_YT/100) + (@mTyleBHTNCN*@SalaryInsO_TN/100),@decp), 
								--Round((@mTyleBHXHCT*@SalaryInsO/100) + (@mTyleBHYTCT*@SalaryInsO_YT/100) + (@mTyleBHTNCT*@SalaryInsO_TN/100),@decp),
								--Round(case when @mTyleBHXHCN + @mTyleBHXHCT > 0 then @PRTUnionRateCo else 0 end * @SalaryInsO/100,@decp), @Num_Add, @note, @SalaryInsO)


								IF v_OldRealSalSI > @RealSalSI OR v_OldRealSalHI > @RealSalHI OR v_OldRealSalUI > @RealSalUI THEN
									v_Num_Add := 28;
								ELSE
									v_Num_Add := 27;
								END IF;

								-- Phat sinh dong moi voi muc moi va cu (III)		
								INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
									"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
									"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns",
									"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
									"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
									"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
									"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
									"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", 
									"HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
									"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
								SELECT @EmployeeID, Round(@MinSalary,@decp), @CoeffSalary, Round(@Real_Salary,@decp), Round(@JobAllo,@decp), Round(@SeniorAllo,@decp), Round(@SeniorOverAllo,@decp), 
									Round(@OtherAllo,@decp), Round(@Amount,@decp), @CoeffJobAllo, @CoeffSeniorAllo, @CoeffSeniorOverAllo, 
									@CoeffOtherAllo, @TotalCoeffAllo, Round(@mAmountSI,@decp), Round(@mBHXHMax,@decp), Round(@SalaryInsO,@decp), 
									Round((@mTyleBHXHCN) * @SalaryInsO/100,@decp), Round((@mTyleBHXHCT) * @SalaryInsO/100,@decp), Round(@mTyleBHYTCN * @SalaryInsO_YT/100,@decp),
									Round(@mTyleBHYTCT * @SalaryInsO_YT/100,@decp), Round(@mTyleBHTNCN * @SalaryInsO_TN/100,@decp), Round(@mTyleBHTNCT * @SalaryInsO_TN/100,@decp), @note, @AdjDowCode, v_Num_Add, @NumAdj,
									@AdjDowCode, '', (date_part('year', @TDate) - date_part('year', (@AdjDowCode || '/01')::timestamp)) * 12 + (date_part('month', @TDate) - date_part('month', (@AdjDowCode || '/01')::timestamp)) + 1, @mTyleBHXH,
									Round("BasicSalContract",@decp), "CoeffSalContract", Round("RealSalContract",@decp), Round("JobAllo",@decp), Round("SeniorAllo",@decp), Round("SeniorOverAllo",@decp), Round("OtherAllo",@decp),
									Round("TotalAllo",@decp), "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffIns", Round("TotalSalIns",@decp), Round("MaxSalSI",@decp),  Round("RealSalSI",@decp),
									"SIRateE" + "SIRateC" as "SIRateEO", "HIRateE" + "HIRateC" as "HIRateEO", "UIRateE" + "UIRateC" as "UNPrivateO", 
									Round("SIAmountE",@decp) as "SIAmountEO", Round(SIAmountC,@decp) as "SIAmountCO", 
									Round("HIAmountE",@decp) as "HIAmountEO", Round(HIAmountC,@decp) as "HIAmountCO",
									Round(UIAmountE,@decp) as "UIAmountEO", Round(UIAmountC,@decp) as "UIAmountCO",
									@mTyleBHYTCN, @mTyleBHTNCN, @mTyleBHXHCN, @mTyleBHYTCT, @mTyleBHTNCT, @mTyleBHXHCT, 
									@KowType, @KowTypePreM, @IsReduceSiUi, @bs_EffectDate,
									@SalaryInsO, @SalaryInsO_YT, @SalaryInsO_TN, @KowCode, @InsReportingDate
								FROM "HR_SocialInsAdjust" 
								Where "EmployeeID" = @EmployeeID and "AdjDowCode" = v_DowCode_SI;

								-- Tự động tính truy thu BHXH
								insert into tmp_auto_adj("EmployeeID", "mType") values(@EmployeeID, 3);
							END IF;
							
							-- END GOTO THAISAN_COTANGLUONG
							
				END IF;

			END IF;
			
		end if;
	
		v_IsReduceSiUi := 0;

		SELECT "mSSL", "Eff_DateNotSi", "Eff_DayOffSi", "PRSIDayDecrease",
		 "PRSITotalDayNotPay", "PRSIDayReturnHI", "PRIsSI1RowForDescreaseML",
		 "PRTUnionRateCo", "UI_RateEmp" + "UI_RateCo", "PRCurrencyForPay" 
		 INTO v_mSSL, v_Eff_DateNotSi, v_Eff_DayOffSi, v_PRSIDayDecrease, v_PRSITotalDayNotPay, v_PRSIDayReturnHI, v_PRIsSI1RowForDescreaseML, v_PRTUnionRateCo, v_mUN, v_PRCurrencyForPay
		FROM "tmp_Employee_Config" WHERE "EmployeeID" = v_EmployeeID
		LIMIT 1;

		if v_CurrencyCode = v_PRCurrencyForPay then
			v_decp := 0;
		else
			v_decp := v_mSSL;
		end if;
				
		-- Nếu nhan vien nghỉ TS đi làm lại có ngày bắt đầu >= 16 thì không trích.
		if exists (
			select 1 from "HR_EmpDayOff" as D inner join "tmp_Cong_TS" as T on D."KowCode" = T."KowCode" 
			where "EmployeeID" = v_EmployeeID and v_FDate between D."BeginDate" and coalesce("REndDate", "EndDate") 
				and (coalesce("REndDate", "EndDate") between v_FDate and v_TDate and coalesce("REndDate", "EndDate") + 1 >= v_Eff_DateNotSi) and D."IsCopy" = 0
			limit 1
		)
		then
		
			continue;
		END IF;
		
		if exists (
			select 1 from "HR_EmpDayOff" as D inner join "tmp_Cong_TS" as T on D."KowCode" = T."KowCode" 
			where "EmployeeID" = v_EmployeeID and v_FDate_PrevM between D."BeginDate" and coalesce("REndDate", "EndDate") 
				AND (coalesce("REndDate", "EndDate") between v_FDate_PrevM and v_TDate_PrevM and coalesce("REndDate", "EndDate") + 1 >= INTERVAL '-1 MONTH' + v_Eff_DateNotSi) 
				AND D."IsCopy" = 0
			limit 1
		)
		THEN
		
			v_KowTypePreM := 9;
			SELECT coalesce("REndDate", "EndDate") + 1 INTO v_bs_EffectDate from "HR_EmpDayOff" as D inner join "tmp_Cong_TS" as T on D."KowCode" = T."KowCode" 
			where "EmployeeID" = v_EmployeeID and v_FDate_PrevM between D."BeginDate" and coalesce("REndDate", "EndDate") 
				AND (coalesce("REndDate", "EndDate") between v_FDate_PrevM and v_TDate_PrevM and coalesce("REndDate", "EndDate") + 1 >= INTERVAL '-1 MONTH' + v_Eff_DateNotSi) 
				AND D."IsCopy" = 0
			LIMIT 1;
        END IF;
 
			
		-- xử lý trường hợp tháng trước Lao dong giam do om dau, nghi viec rieng chỉ mới báo giảm, tháng nay bao tăng
		IF EXISTS(SELECT 1 FROM "tmp_AdjSI" WHERE "EmployeeID" = v_EmployeeID AND "NumAdd" = 6 LIMIT 1)
		THEN

			IF NOT EXISTS(SELECT 1 FROM "tmp_AdjSI" WHERE "EmployeeID" = v_EmployeeID AND "NumAdd" = 14 LIMIT 1) and v_KowType not in (9,19)
			THEN
				-- 2021.12.22
				-- Nếu Sau khoảng thoi gian nghi không lương, nhan vien quyet dinh nghi việc có ngày nghỉ sau ngày làm căn cứ báo giảm
				-- Ví dụ: nghỉ ngay 27.10 --> tháng 11 báo giảm nghỉ việc cho nhan vien
				IF v_EndDate Between Interval '-1 month' + Cast( p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)) as timestamp(3)) AND v_TDate
				THEN
					IF SUBSTR(TO_CHAR (v_EndDate, 'YYYY/MM/DD'), 1, 7) = SUBSTR(TO_CHAR (p_AdjDowCode, 'YYYY/MM/DD'), 1, 7) THEN
						--GOTO DEDUCTION_BY_COUNT_KOWDS
					ELSE
						--GOTO DEDUCTION_AFTER_CHECK_KOWDS
					END IF;
				end if;
				
				v_Num_Add := 14;
	
				-- 27.10.2021: Báo tang sau khi nghi khong luong từ 4.5 --> full (linfox)
				INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
					"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
					"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
					"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
					"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
					"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate") 
				VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
					Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
					v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
					Round(v_mTyleBHXHCN * v_SalaryInsO/100,v_decp), Round(v_mTyleBHXHCT * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
					Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
					p_AdjDowCode, case when v_Num_Add = 13 then SUBSTR(TO_CHAR (v_MaxEndDate, 'YYYY/MM/DD'), 1, 7) else '' end, 0, 
					v_mTyleBHXHCN + v_mTyleBHXHCT + v_mTyleBHYTCN + v_mTyleBHYTCT + v_mTyleBHTNCN + v_mTyleBHTNCT, 
					v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi,
					v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate);

            END IF;
            
		end if;

		-- 2021.08.24: Nếu nghỉ việc tháng trước tuy nhiên, đủ điều kiện đóng theo công, tháng này báo giảm lại
		if exists(select 1 from "tmp_SI" where "EmployeeID" = v_EmployeeID limit 1)
			and (substr(to_char (v_EndDate, 'yyyy/mm/dd'), 1, 7) = v_PrevAdjDowCode)
		then
			--goto DEDUCTION_AFTER_CHECK_KOWDS
		end if;
		
		-- 2021.08.24: Nếu nghỉ việc tháng trước và báo giam rầu thì không xử lý gì nữa.
		if not exists(select 1 from "tmp_SI" where "EmployeeID" = v_EmployeeID limit 1)
			and (substr(to_char (v_EndDate, 'yyyy/mm/dd'), 1, 7) <= v_PrevAdjDowCode)
		then
							
			-- Neu vua nghi xong thai san, nghi viec luon thi phai bao giam do nghi ts
			if not exists( select 1 from (
				select "NumAdd" 
				from "HR_SocialInsAdjust" where "EmployeeID" = v_EmployeeID and "AdjDowCode" < p_AdjDowCode
				AND "NumAdd" NOT IN (27,28)
				order by "AdjDowCode" desc
				limit 1
			) as R where "NumAdd" = 5 limit 1) 
			then
				continue;
			end if;
		end if;

		-- 2021.12.29: 14 ngày công di làm này sẽ ko bao gồm các loại nghỉ mà đc tính để báo giảm như là KL, ốm, tai nạn,.....
		if exists(select 1 from "HR_SysSettingsForCustomers" where "KeyCode" = 'Linfox_JoinDate_EndDate_TheSame' and "Value" = 1 limit 1)
		THEN
			IF v_EndDate between v_FDate and v_TDate AND v_YYYYMMJoinDate = p_AdjDowCode
			THEN
			
				WITH "tblA" AS (
					SELECT LTRIM(RTRIM(CAST(data AS VARCHAR(20)))) AS "KowCode" FROM "HR_FNSplitString_varchar"(v_PRSIPaidDayKowCodes::citext, ',')
				)
				SELECT COALESCE(SUM(T."DayNum"), 0) INTO v_tmpDayNum
				FROM "HR_TSKowDs" AS T INNER JOIN "tblA" AS T1 ON T."KowCode" = T1."KowCode"
				WHERE T."EmployeeID" = v_EmployeeID AND T."WorkDate" BETWEEN v_OfficialDate AND v_EndDate - 1;

				IF v_tmpDayNum < 14 THEN --PRSITotalDayNotPay AND @PRSITotalPaidDays > 0
					CONTINUE;
				END IF;
            END IF; 
        END IF;

		--case 1: nhan vien nghi viec trong thang. 
		--Tuy nhiên, nếu trong tháng có tổng số ngày >= 14 và ngày nghỉ việc thuộc kỳ dương lịch thì báo giảm luon
		-- interdist dang không dùng --> cần thiet lap option rieng
		IF ((v_EndDate > v_Eff_DayOffSi) And (v_EndDate <= To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)), 102)))
		THEN

			IF SUBSTR(TO_CHAR (v_EndDate, 'YYYY/MM/DD'), 1, 7) = SUBSTR(TO_CHAR (p_AdjDowCode, 'YYYY/MM/DD'), 1, 7) THEN
				--GOTO DEDUCTION_BY_COUNT_KOWDS
			END IF;

			-- 2020.08.11. plvtmi note
			-- Trong trường hợp nghỉ việc --> nếu nhân viên nghỉ việc trước ngày 16 thì lấy mức lương cũ.
			IF v_EndDate < INTERVAL '1 MONTH' + v_Eff_DayOffSi AND v_Num_Add = 4
			THEN
				v_PrevDowCode := SUBSTR(TO_CHAR (INTERVAL '-1 MONTH' + p_AdjDowCode || '/01', 'YYYY/MM/DD'), 1, 7);
				
				-- cap nhat lai config
				UPDATE "tmp_Employee_Config" SET "Eff_DateNotSi" = INTERVAL '-1 MONTH' + "Eff_DateNotSi", "Eff_DayOffSi" = INTERVAL '-1 MONTH' + "Eff_DayOffSi"
				WHERE "EmployeeID" = v_EmployeeID;
				
				-- tính lại phụ cấp
				DELETE FROM "tmp_tblSiAllowance" WHERE "EmployeeID" = v_EmployeeID;
				INSERT INTO "tmp_tblSiAllowance"("EmployeeID", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "Amount", "AmountF")
				SELECT * FROM "HR_spGetSiAllowance"(v_PrevDowCode, v_EmployeeID);
	
				-- tính lại bhxh
				DELETE FROM "tmp_tblGetDeductionSI" WHERE "EmployeeID" = v_EmployeeID;
				INSERT into "tmp_tblGetDeductionSI"("EmployeeID", "MinSalary", "CoeffSalary", "Real_Salary", "EndDate", "mTyleBHXH", "mTyleBHYT", 
						"mTyleBHTN", "mAmountSI", "mBHXHMax", "mBHYTMax", "mBHTNMax", "SalaryInsO", "SalaryInsO_YT", "SalaryInsO_TN",
						"JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "Amount", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo",
						"DateNum", "KowType", "mTyleBHXHCN", "mTyleBHXHCT", "mTyleBHYTCN", "mTyleBHYTCT", "mTyleBHTNCN", "mTyleBHTNCT", "AmountF",
						"Active", "ReturnKCBDate", "GroupType", "bs_EffectDate")
				SELECT * FROM "HR_spGetDeductionSI_BySalary"(v_PrevDowCode, v_EmployeeID);

				SELECT "MinSalary", "CoeffSalary", "Real_Salary", "mTyleBHXH", "mTyleBHYT", "mTyleBHTN", 
				 "mAmountSI", "mBHXHMax", "mBHYTMax", "mBHTNMax", "SalaryInsO", "SalaryInsO_YT", "SalaryInsO_TN", 
				 "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo", "Amount", "CoeffJobAllo", "CoeffSeniorAllo", 
				 "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", 0, 0, "mTyleBHYTCN", "mTyleBHYTCT", 0, 0, "AmountF" 
 				INTO v_MinSalary, v_CoeffSalary, v_Real_Salary, v_mTyleBHXH, v_mTyleBHYT, v_mTyleBHTN, v_mAmountSI, v_mBHXHMax, v_mBHYTMax, v_mBHTNMax, v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_JobAllo, v_SeniorAllo, v_SeniorOverAllo, v_OtherAllo, v_Amount, v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, v_TotalCoeffAllo, v_mTyleBHXHCN, v_mTyleBHXHCT, v_mTyleBHYTCN, v_mTyleBHYTCT, v_mTyleBHTNCN, v_mTyleBHTNCT, v_AmountF
				FROM "tmp_tblGetDeductionSI"
				WHERE "EmployeeID" = v_EmployeeID;
            end if;
			
			v_mTyleBHXHCN := 0;
			v_mTyleBHXHCT := 0;
			v_mTyleBHTNCN := 0;
			v_mTyleBHTNCT := 0;

			--IF @IsReturnKCB = 0
			--BEGIN
				v_RateEmp := 0;
				v_RateCo := 0;
				SELECT "RateEmp", "RateCo" INTO v_RateEmp, v_RateCo FROM "HR_LSInsuranceTypeDetail" 
				WHERE "SICode" = v_HICode and SUBSTR(TO_CHAR ("FromYear", 'YYYY/MM/DD'), 1, 7) <= p_AdjDowCode ORDER BY "FromYear" desc
				LIMIT 1;				

				-- 2021.01.28: Nếu nhân vien nghỉ việc không trả thẻ kịp thời thì nếu tỷ lệ bảo hiểm cá nhân vs công ty có nhập
				-- thì tổng tỷ lệ đóng bhxh do cá nhân đóng (nghison dùng option này)
				-- Nếu user chỉ thiết lập % cho cá nhân hoặc chỉ cho công ty thì lấy theo thiết lập tương ứng (phl dùng) 
				IF v_RateEmp <> 0 AND v_RateCo <> 0
				then
				
					-- 2021.01.28: Nếu nhân vien nghỉ việc không trả thẻ kịp thời thì nếu tỷ lệ bảo hiểm cá nhân vs công ty có nhập
					-- thì tổng tỷ lệ đóng bhxh do cá nhân đóng (nghison dùng option này)
					if exists(select 1 from "HR_SysSettingsForCustomers" where "KeyCode" = 'VAS_NVNghiViecKhongTraThe' and "Value" = 1 limit 1)
					then
						v_mTyleBHYTCN := v_mTyleBHYTCN + v_mTyleBHYTCT;
						v_mTyleBHYTCT := 0;
					end if;
					-- nguoc lai, ty le cua ai, nguoi nay dong
				ELSE
				
					v_mTyleBHYTCN := v_RateEmp;
					v_mTyleBHYTCT := v_RateCo;
				END IF;
			--end
			--ELSE
			--BEGIN
				IF v_Num_Add = 2
				THEN 
					v_mTyleBHYTCN := 0;
					v_mTyleBHYTCT := 0;
				END IF; 
			--SET @Num_Add = 2
			--end

			-- phat sinh mot dong giam vao vung (II)
			
			INSERT INTO tmp_HR_SocialInsAdjust("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
				"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
				"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
				"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC",
				"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
				"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
				"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO", 
				"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
				"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
				"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
			VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp),
				Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), 
				Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
				v_mTyleBHXHCN, v_mTyleBHYTCN, v_mTyleBHTNCN, Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, 
				v_Num_Add, p_NumAdj, p_AdjDowCode, '', (date_part('year', v_TDate) - date_part('year', v_FDate)) * 12 + (date_part('month', v_TDate) - date_part('month', v_FDate)) + 1, v_mTyleBHYT, v_mTyleBHYTCN, 0, 0, v_mTyleBHYTCT, 0, 0, v_KowType, v_KowTypePreM, v_IsReduceSiUi,
				v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate);
			-- Xet nhan vien ke tiep
			CONTINUE;
		END IF;
						
		-- Trích nộp nếu Tổng số ngày công hưởng lương >=
		IF v_PRSITotalPaidDays > 0 AND COALESCE(v_PRSIPaidDayKowCodes, '') <> ''
		THEN
			
			WITH "tblA" AS (
				SELECT LTRIM(RTRIM(CAST(data AS VARCHAR(20)))) AS "KowCode" FROM "HR_FNSplitString_varchar"(v_PRSIPaidDayKowCodes::citext, ',')
			)
			SELECT v_tmpDayNum + COALESCE(SUM(T."DayNum"), 0) INTO v_tmpDayNum
			FROM "HR_TSKowDs" AS T INNER JOIN "tblA" AS T1 ON T."KowCode" = T1."KowCode"
			WHERE T."EmployeeID" = v_EmployeeID AND T."WorkDate" BETWEEN @fBegDay AND @fEndDay;

			IF v_tmpDayNum > v_tmpPRSITotalPaidDays AND v_PRSITotalPaidDays > 0
			then
				if (v_KowType = 9 Or v_KowType = 19) then
					--GOTO NGHI_VIEC_NHUNG_NGHI_KHONG_LUONG
				else 
					--GOTO CONTINUE_DEDUCTION
				end if;
            else

				IF SUBSTR(TO_CHAR (v_EndDate, 'YYYY/MM/DD'), 1, 7) = SUBSTR(TO_CHAR (p_AdjDowCode, 'YYYY/MM/DD'), 1, 7)
				THEN
							
					/*
						2022.06.13. Vừa nghỉ việc, vừa nghỉ không lương. 
						Nếu > ngày căn cứ báo giảm thì đểm thêm công nghỉ không lương từ ngày nghỉ việc đến cuối kỳ lương
					*/
					if v_EndDate > To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)), 102) then
						v_DateNum := v_DateNum + "HR_fnFGetHT_DemCongMacDinh"(v_EmployeeID, p_AdjDowCode, v_EndDate, p_GenDate, 3);
					end if;

					-- Propzy_BHXH:Điều chỉnh trích nộp bhxh trong trường hợp nghỉ không lương, nghỉ việc cùng tháng
					-- Yêu cầu: thực hiện trích hợp báo giảm không lương cho tháng trích nộp. Qua tháng tiếp theo thì báo giảm cho nhân viên.
					IF v_DateNum >= v_PRSITotalDayNotPay THEN
						--GOTO NGHI_VIEC_NHUNG_NGHI_KHONG_LUONG
					else

						-- 2022.06.13: nhân viên mới vào làm và nghỉ việc sau ngày 14.
						IF not exists(select 1 from "HR_SocialIns" where "EmployeeID" = v_EmployeeID and "DowCode" < p_AdjDowCode limit 1)
							and v_EndDate is not null
						then
						
							-- nếu vào làm trong tháng
							if v_JoinDate >= Interval '-1 month' + Cast( p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)) as timestamp(3))
							then
								--IF DATEDIFF(DAY, @JoinDate, @EndDate) <= @PRSITotalPaidDays
								--	CONTINUE;
								--if @EndDate > Convert(datetime, @AdjDowCode + '/' + cast(@PRSIDayDecrease as varchar), 102)
								--	GOTO CONTINUE_DEDUCTION
								--else 
								--if @EndDate <= Convert(datetime, @AdjDowCode + '/' + cast(@PRSIDayDecrease as varchar), 102)
									continue;
							else -- vào làm trước đó, nhưng bây giờ  mới vận hành hệ thống 
								if v_EndDate <= To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)), 102) then
									--GOTO DEDUCTION_AFTER_CHECK_KOWDS
								else
									--GOTO CONTINUE_DEDUCTION
								end if;
							end if;
						else 
						
							-- 2022.06.30: nghỉ việc trong tháng, tuy nhien, trong tháng nghỉ ts >= 14 --> tháng sau mới giam hản
							IF (v_EndDate BETWEEN v_FDate AND v_TDate AND 
								"HR_fnDemCongTSBatKy"(v_EmployeeID, p_AdjDowCode, v_FDate, v_TDate, v_Eff_DateNotSi, v_PRSITotalDayNotPay) >= v_PRSITotalDayNotPay
							)
							THEN
								CONTINUE;
							ELSE
								--GOTO DEDUCTION_AFTER_CHECK_KOWDS
							end if;
						end if;
					end if;
				end if;
				
				-- Nếu không đủ công thì không trích
				/*
					2022.06.13. Nếu không đủ công và nếu nghỉ quá 14 ngày theo quy định BHXH thì vẫn báo giảm.
					Và trong trường hợp, không khai báo nghỉ báo giảm trong dayoff thì theo rule không trích 
					trong trường hợp không đủ công
				*/

				IF v_PRSITotalPaidDays > 0 AND v_KowType NOT IN (9,19) and v_DateNum < v_PRSITotalDayNotPay
				then
					-- nếu nhân viên làm lâu năm và là tháng setup khởi tạo thì tạo mới dòng tăng ảo
					if v_JoinDate <= Cast( p_AdjDowCode || '/' || cast(v_PRSIDayDecrease as varchar(30)) as timestamp(3))
						and not exists(select 1 from "HR_SocialIns" where "DowCode" < p_AdjDowCode limit 1)
					then
						--GOTO CONTINUE_DEDUCTION
					ELSE
						v_DateNum := v_DateNum + "HR_fnDemCongTS"(v_EmployeeID, p_AdjDowCode, v_FDate, v_TDate, v_Eff_DateNotSi, v_PRSITotalDayNotPay);
						IF v_DateNum >= v_PRSITotalDayNotPay THEN
							--GOTO NGHI_VIEC_NHUNG_NGHI_KHONG_LUONG
						else
							CONTINUE;
						END IF;
					end if;
				end if;
			end if;
        END IF;

		--case 2: Nhan vien nghi trong thang qua 15 ngay 
		IF v_DateNum >= v_PRSITotalDayNotPay --Xet neu nhan vien co tong ngay nghi trong thang vuot qua quy dinh bao giam thi bao giam thuong la 15				
		THEN
		
			/*
				-	Căn cứ vào ngày thực hiện nghiệp vụ "Trích nộp BH" của hệ thống so với ngày 01 của tháng đang báo cáo, nếu:
				•	Ngày thực hiện < ngày 01 của tháng báo cáo thì giảm hết cả 3 loại: BHXH, BHYT, BHTN, ngược lại,
				•	Ngày thực hiện >= ngày 01 của tháng báo cáo thì giảm BHXH, BHTN còn BHYT thì đóng theo tỷ lệ.
				•	Nếu thời gian nghỉ liên tục và giảm từ 2 tháng trở lên thì theo nguyên tắc trên chỉ đóng BHYT cho tháng đầu tiên, qua tháng thứ 2 trở đi sẽ giảm cả 3 loại BH: BHXH, BHTN, BHYT

				2019.06.10 IC-comment: 
					Loại công nghỉ = nghỉ khác ==> Giảm 2 loại, 
					các loại nghỉ khác (nghỉ chế độ bảo hiểm): 7,10,11,12,13,18,20,21,22,23 ==> giảm 3 loại
			*/

			-- Ngày thực hiện >= ngày 01 của tháng báo cáo thì giảm BHXH, BHTN còn BHYT thì đóng theo tỷ lệ.					
			v_mTyleBHXH_old := v_mTyleBHXH;
			v_mTyleBHXHCN_old := v_mTyleBHXHCN;
			v_mTyleBHXHCT_old := v_mTyleBHXHCT;
			v_mTyleBHTN_old := v_mTyleBHTN;
			v_mTyleBHTNCN_old := v_mTyleBHTNCN;
			v_mTyleBHTNCT_old := v_mTyleBHTNCT;
			v_mTyleBHYTCN_old := v_mTyleBHYTCN;
			v_mTyleBHYTCT_old := v_mTyleBHYTCT;

			-- lặp lần 1. Xử lý case nghỉ không lương có nhập Ngày nộp BHXH
			IF v_DateNum >= v_PRSIDayDecrease AND (v_KowType = 9 Or v_KowType = 19)
			then
				v_Num_Add := 5;
			ELSE
				v_Num_Add := 6;
				/*
					2.1: Nhập ngày kê khai < 01/04/2021 -> kết quả trích nằm tại option LĐ giảm do ốm đau, nghỉ việc riêng với mức trích = 0
					2.2: Nhập ngày kê khai >= 01/04/2021 -> kết quả trích nằm tại option LĐ giảm do ốm đau, nghỉ việc riêng với mức trích tại cột Nhân viên chịu 4.5% BHYT 
						+ số tiền trích tương ứng
				*/
				IF v_KowType = 27 OR EXISTS(SELECT 1 FROM "HR_LSKOW" 
					WHERE "KowCode" = v_KowCode AND "KowType" = 4 AND "IsInPayrollSI" = 0 AND "BasicSalRateSI" = 0 LIMIT 1)
				THEN
					
					IF v_InsReportingDate IS NOT NULL AND v_InsReportingDate >= 
						To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayReturnHI as varchar(30)), 102)
					THEN
						IF EXISTS(SELECT 1 FROM "HR_SysSettingsForCustomers" WHERE "KeyCode" = 'AQua_KowType4_SharingSIRate' AND "Value" = 1 LIMIT 1)
						THEN
							v_mTyleBHYTCN := v_mTyleBHYTCN_old;
							v_mTyleBHYTCT := v_mTyleBHYTCT_old;
						ELSE 
							v_mTyleBHYTCN := v_mTyleBHYTCN_old + v_mTyleBHYTCT_old;
							v_mTyleBHYTCT := 0;
						end if;
					else
						v_mTyleBHYTCN := 0;
						v_mTyleBHYTCT := 0;
					end if;
                END IF;
			END IF;

			IF v_Num_Add = 6
			THEN
				if EXISTS(
					SELECT R."EmployeeID", "HIRateE", "HIRateC", "HIAmountE", "HIAmountC", "InsAmountE", "InsAmountC" 
					FROM (
						SELECT T."RecID", T."EmployeeID", T."NumAdd", T."HIRateE", T."HIRateC", T."HIAmountE", T."HIAmountC", T."InsAmountE", T."InsAmountC", T."FromDowCode", T."ToDowCode", 
							ROW_NUMBER() OVER(PARTITION BY T."EmployeeID" ORDER BY T."AdjDowCode" desc) as "RowID"
						FROM "HR_SocialInsAdjust" AS T
							INNER JOIN (
								SELECT "EmployeeID" FROM "tmp_HR_SocialInsAdjust" WHERE "NumAdd" = 6 AND "EmployeeID" = v_EmployeeID
							) AS T1 ON T."EmployeeID" = T1."EmployeeID"
						WHERE T."AdjDowCode" < p_AdjDowCode AND T."EmployeeID" = v_EmployeeID --AND (T.FromDowCode <> '' AND T.ToDowCode <> '')
					) AS R WHERE (R."RowID" = 1 AND (R."NumAdd" = 6)) OR (R."RowID" = 2 AND (R."NumAdd" = 6))
				) then
					CONTINUE;
				end if;
            end if;

			if SUBSTR(TO_CHAR (NOW(), 'YYYY/MM/DD'), 1, 10) >= p_AdjDowCode || '/01' AND (v_KowType NOT IN (9, 19))
			THEN

				v_PreDowCode := SUBSTR(TO_CHAR (INTERVAL '-1 MONTH' + CAST(p_AdjDowCode || '/01' AS TIMESTAMP(3)), 'YYYY/MM/DD'), 1, 7);
				IF NOT EXISTS(SELECT 1 FROM "HR_SocialInsAdjust" WHERE "EmployeeID" = v_EmployeeID AND "AdjDowCode" = v_PreDowCode AND "IsReduceSiUi" = 1 LIMIT 1)
				THEN
				
					v_mTyleBHXH := 0;
					v_mTyleBHXHCN := 0;
					v_mTyleBHXHCT := 0;
					v_mTyleBHTN := 0;
					v_mTyleBHTNCN := 0;
					v_mTyleBHTNCT := 0;

					-- không dong bhyt
					IF v_KowType IN (7,10,11,12,13,18,20,21,22,23)
					THEN
						IF v_InsReportingDate IS NOT NULL AND v_InsReportingDate >= 
							To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayReturnHI as varchar(30)), 102)
						THEN
							v_mTyleBHYT := v_mTyleBHYT_old;
							v_mTyleBHYTCN := v_mTyleBHYTCN_old;
							v_mTyleBHYTCT := v_mTyleBHYTCT_old;
						ELSE
							v_mTyleBHYT := 0;
							v_mTyleBHYTCN := 0;
							v_mTyleBHYTCT := 0;
						end if;
                    end if;

					v_IsReduceSiUi := 1;

					----Phat sinh bao hiem cho nhan vien  
					-- 2022.07.28
					--SET @Num_Add = 9				
					--INSERT INTO #HR_SocialIns(EmployeeID, DowCode, BasicSalContract, CoeffSalContract, RealSalContract, JobAllo, SeniorAllo, SeniorOverAllo, OtherAllo,
					--							  TotalAllo, CoeffJobAllo, CoeffSeniorAllo, CoeffSeniorOverAllo, CoeffOtherAllo, TotalCoeffAllo, MaxSalSI, MaxSalHI, MaxSalUI, TotalSalIns,
					--							  TotalCoeffIns, RealSalSI, RealSalHI, RealSalUI, SIRateE, SIRateC, HIRateE, HIRateC, UIRateE, UIRateC, SIAmountE, SIAmountC,
					--							  HIAmountE, HIAmountC, UIAmountE, UIAmountC, InsAmountE, InsAmountC, TUnionAmountC, NumAdd, Note, SalaryIns)
					--VALUES(@EmployeeID, @AdjDowCode, Round(@MinSalary,@decp), @CoeffSalary, Round(@Real_Salary,@decp), Round(@JobAllo,@decp), Round(@SeniorAllo,@decp), Round(@SeniorOverAllo,@decp), 
					--Round(@OtherAllo,@decp), Round(@Amount,@decp), @CoeffJobAllo, @CoeffSeniorAllo, @CoeffSeniorOverAllo, @CoeffOtherAllo, @AmountF, Round(@mBHXHMax,@decp), Round(@mBHYTMax,@decp), Round(@mBHTNMax,@decp), Round(@Real_Salary + @Amount,@decp), @TotalCoeffAllo, 
					--Round(@SalaryInsO,@decp), Round(@SalaryInsO_YT,@decp), Round(@SalaryInsO_TN,@decp), @mTyleBHXHCN, @mTyleBHXHCT, @mTyleBHYTCN, @mTyleBHYTCT, @mTyleBHTNCN, @mTyleBHTNCT, 
					--Round(@mTyleBHXHCN * @SalaryInsO / 100,@decp), Round(@mTyleBHXHCT * @SalaryInsO / 100,@decp), Round(@mTyleBHYTCN * @SalaryInsO_YT / 100,@decp), 
					--Round(@mTyleBHYTCT * @SalaryInsO_YT / 100,@decp), Round(@mTyleBHTNCN * @SalaryInsO_TN / 100,@decp), Round(@mTyleBHTNCT * @SalaryInsO_TN / 100,@decp),
					--Round((@mTyleBHXHCN*@SalaryInsO/100) + (@mTyleBHYTCN*@SalaryInsO_YT/100) + (@mTyleBHTNCN*@SalaryInsO_TN/100),@decp), 
					--Round((@mTyleBHXHCT*@SalaryInsO/100) + (@mTyleBHYTCT*@SalaryInsO_YT/100) + (@mTyleBHTNCT*@SalaryInsO_TN/100),@decp),
					--Round(case when @mTyleBHXHCN + @mTyleBHXHCT > 0 then @PRTUnionRateCo else 0 end * @SalaryInsO/100,@decp), @Num_Add, @note, @SalaryInsO)

					-- dong bhxh, bhtn
					IF v_KowType NOT IN (7,10,11,12,13,18,20,21,22,23)
					then
						v_mTyleBHXH := v_mTyleBHXH_old;
						v_mTyleBHXHCN := v_mTyleBHXHCN_old;
						v_mTyleBHXHCT := v_mTyleBHXHCT_old;
						v_mTyleBHTN := v_mTyleBHTN_old;
						v_mTyleBHTNCN := v_mTyleBHTNCN_old;
						v_mTyleBHTNCT := v_mTyleBHTNCT_old;
					END IF;
                    
					-- 2021.04.13. linfox
					--SET @mTyleBHYT = 0
					--SET @mTyleBHYTCN = 0
					--SET @mTyleBHYTCT = 0
				END IF; 
            END IF;
            
			v_PreDowCode := SUBSTR(TO_CHAR (INTERVAL '-1 MONTH' + CAST(p_AdjDowCode || '/01' AS TIMESTAMP(3)), 'YYYY/MM/DD'), 1, 7);
			IF EXISTS(SELECT 1 FROM "HR_SocialInsAdjust" WHERE "EmployeeID" = v_EmployeeID AND "AdjDowCode" = v_PreDowCode AND "IsReduceSiUi" = 1 LIMIT 1)
			THEN
				-- Nếu thời gian nghỉ liên tục và giảm từ 2 tháng trở lên thì theo nguyên tắc trên chỉ đóng BHYT cho tháng đầu tiên, qua tháng thứ 2 trở đi sẽ giảm cả 3 loại BH: BHXH, BHTN, BHYT
				v_IsReduceSiUi := 1;
            END IF;
            
			-- lặp lần 1. Xử lý case nghỉ không lương có nhập Ngày nộp BHXH
			IF v_DateNum >= v_PRSIDayDecrease AND (v_KowType = 9 Or v_KowType = 19)
			then
				v_Num_Add := 5;
				v_mTyleBHXHCN := 0;
				v_mTyleBHXHCT := 0;
				v_mTyleBHTNCN := 0;
				v_mTyleBHTNCT := 0;
				v_mTyleBHYTCN := 0;
				v_mTyleBHYTCT := 0;
			ELSE
				v_Num_Add := 6;

				INSERT INTO "tmp_HCSSI_SocialInsAdjust_v2"("EmployeeID", "SIRateE", "HIRateE", "UIRateE", "SIRateC", "HIRateC", "UIRateC", 
					"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC")
				VALUES(v_EmployeeID, v_mTyleBHXHCN, v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCT, v_mTyleBHYTCT, v_mTyleBHTNCT,
					ROUND((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
					Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp));

				v_mTyleBHXHCN := 0;
				v_mTyleBHXHCT := 0;
				v_mTyleBHTNCN := 0;
				v_mTyleBHTNCT := 0;

				/*
					2.1: Nhập ngày kê khai < 01/04/2021 -> kết quả trích nằm tại option LĐ giảm do ốm đau, nghỉ việc riêng với mức trích = 0
					2.2: Nhập ngày kê khai >= 01/04/2021 -> kết quả trích nằm tại option LĐ giảm do ốm đau, nghỉ việc riêng với mức trích tại cột Nhân viên chịu 4.5% BHYT 
						+ số tiền trích tương ứng
				*/
				IF v_KowType = 27 OR EXISTS(SELECT 1 FROM "HR_LSKOW" 
					WHERE "KowCode" = v_KowCode AND "KowType" = 4 AND "IsInPayrollSI" = 0 AND "BasicSalRateSI" = 0 LIMIT 1)
				THEN
					
					IF v_InsReportingDate IS NOT NULL AND v_InsReportingDate >= 
						To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayReturnHI as varchar(30)), 102)
					THEN
						IF EXISTS(SELECT 1 FROM "HR_SysSettingsForCustomers" WHERE "KeyCode" = 'AQua_KowType4_SharingSIRate' AND "Value" = 1 LIMIT 1)
						THEN
							v_mTyleBHYTCN := v_mTyleBHYTCN_old;
							v_mTyleBHYTCT := v_mTyleBHYTCT_old;
						ELSE 
							v_mTyleBHYTCN := v_mTyleBHYTCN_old + v_mTyleBHYTCT_old;
							v_mTyleBHYTCT := 0;
						end if;
					else
						v_mTyleBHYTCN := 0;
						v_mTyleBHYTCT := 0;
					end if;
                END IF;
			END IF;
		
			if v_Num_Add = 6
			then
				/*
					KowType. 7: CO, 4: KL
					CO >= 14 --> báo CO
					ML >= 14 --> báo ML
					Neu tong ngay nghi > 14 bao KL
				*/
				if v_DateNum >= v_PRSITotalDayNotPay and v_KowType = 7
				THEN
                    v_tmpDateNum := 0;
					v_tmpDateNum := "HR_fnDemCongOM"(v_EmployeeID, p_AdjDowCode, v_FDate, v_TDate, v_Eff_DateNotSi, v_PRSITotalDayNotPay);
					
					IF v_tmpDateNum >= v_PRSITotalDayNotPay
					then
						v_KowType := 7;
					ELSE
						v_KowType := 4;

						IF v_InsReportingDate IS NOT NULL AND v_InsReportingDate >= 
							To_timestamp(p_AdjDowCode || '/' || cast(v_PRSIDayReturnHI as varchar(30)), 102)
						THEN
							IF EXISTS(SELECT 1 FROM "HR_SysSettingsForCustomers" WHERE "KeyCode" = 'AQua_KowType4_SharingSIRate' AND "Value" = 1 LIMIT 1)
							THEN
								v_mTyleBHYTCN := v_mTyleBHYTCN_old;
								v_mTyleBHYTCT := v_mTyleBHYTCT_old;
							ELSE 
								v_mTyleBHYTCN := v_mTyleBHYTCN_old + v_mTyleBHYTCT_old;
								v_mTyleBHYTCT := 0;
							end if;
						else
							v_mTyleBHYTCN := 0;
							v_mTyleBHYTCT := 0;
						end if;
					end if;
				END IF;
			END IF;
           

			--Phat sinh bao hiem cho nhan vien  
			-- 2022.07.28
			-- SET @Num_Add = 9		
		
			INSERT INTO "tmp_HR_SocialIns"("EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
											"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
											"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
											"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns")
			VALUES(v_EmployeeID, p_AdjDowCode, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
			Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, v_AmountF, Round(v_mBHXHMax,v_decp), Round(v_mBHYTMax,v_decp), Round(v_mBHTNMax,v_decp), Round(v_Real_Salary + v_Amount,v_decp), v_TotalCoeffAllo, 
			Round(v_SalaryInsO,v_decp), Round(v_SalaryInsO_YT,v_decp), Round(v_SalaryInsO_TN,v_decp), v_mTyleBHXHCN, v_mTyleBHXHCT, v_mTyleBHYTCN, v_mTyleBHYTCT, v_mTyleBHTNCN, v_mTyleBHTNCT, 
			Round(v_mTyleBHXHCN * v_SalaryInsO / 100,v_decp), Round(v_mTyleBHXHCT * v_SalaryInsO / 100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT / 100,v_decp), 
			Round(v_mTyleBHYTCT * v_SalaryInsO_YT / 100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN / 100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN / 100,v_decp),
			Round((v_mTyleBHXHCN*v_SalaryInsO/100) + (v_mTyleBHYTCN*v_SalaryInsO_YT/100) + (v_mTyleBHTNCN*v_SalaryInsO_TN/100),v_decp), 
			Round((v_mTyleBHXHCT*v_SalaryInsO/100) + (v_mTyleBHYTCT*v_SalaryInsO_YT/100) + (v_mTyleBHTNCT*v_SalaryInsO_TN/100),v_decp),
			Round(case when v_mTyleBHXHCN + v_mTyleBHXHCT > 0 then v_PRTUnionRateCo else 0 end * v_SalaryInsO/100,v_decp), 9, p_note, v_SalaryInsO);

			-- 30 fields
			-- Phat sinh dong moi voi muc cu (II)
			
			INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
				"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
				"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
				"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC",
				"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
				"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
				"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO", 
				"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
				"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
				"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
			VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp),
				Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp),
				Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
				v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
				v_mTyleBHXHCN, v_mTyleBHYTCN, v_mTyleBHTNCN, Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
				p_AdjDowCode, '', 0, v_mTyleBHXH, v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi, v_Dayoff_EndDate,
				v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate); 

			SELECT MAX("ToTime") INTO v_MaxEndDate FROM "HR_EmpHICard" WHERE ("EmployeeID" = v_EmployeeID and "IsCopy" = 0) GROUP BY "EmployeeID";
		
			IF v_MaxEndDate IS NOT NULL AND EXTRACT(DAY FROM DATE_TRUNC('day', v_MaxEndDate) - DATE_TRUNC('day', v_Eff_DayOffSi)) > 0
			THEN
				-- Phat sinh dong moi voi muc moi (IV)
				IF v_Num_Add = 5 THEN
					v_Num_Add := 13;
				ELSE
					v_Num_Add := 14;
				END IF;

				if v_Num_Add = 13 and v_PRIsSI1RowForDescreaseML = 1 -- Nghỉ Thai sản chỉ phát sinh 1 dòng giảm
				then
					continue;
				end if;

				v_mTyleBHTNCN := 0;
				v_mTyleBHTNCT := 0;
				v_mTyleBHXHCN := 0;
				v_mTyleBHXHCT := 0;
				
				INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
					"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
					"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
					"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
					"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
					"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate") 
				VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
					Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
					v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
					Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
					Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
					p_AdjDowCode, case when v_Num_Add = 13 then SUBSTR(TO_CHAR (v_MaxEndDate, 'YYYY/MM/DD'), 1, 7) else '' end, 0, v_mTyleBHYT, v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi, v_Dayoff_EndDate, 
					v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate);
			END IF;
			--Xet nhan vien ke tiep
			Continue;
		END IF;

		-- tổng tỷ lệ bh
		v_totCurrPercentPay := v_mTyleBHTNCN + v_mTyleBHTNCT + v_mTyleBHXHCN + v_mTyleBHXHCT + v_mTyleBHYTCN + v_mTyleBHYTCT;
		v_RealSalSI := v_SalaryInsO;
		v_RealSalHI := v_SalaryInsO_YT;
		v_RealSalUI := v_SalaryInsO_TN;

		IF v_OldRealSalSI IS NULL
		THEN

			-- 2022.01.10: Nếu thai sản đi làm lại, mà trước đó có tăng lương trong thời gian thai sản --> bị mất vết --> khôi phục lại status
			-- 2022.06.15: Khi TS đi làm lại, có điều chỉnh lương.
			IF v_KowType <> -1 and EXISTS(
				SELECT 1
				FROM (
					SELECT "NumAdd", "KowType" FROM "HR_SocialInsAdjust" 
					WHERE "EmployeeID" = v_EmployeeID AND "AdjDowCode" < p_AdjDowCode AND "NumAdd" NOT IN (27,28) ORDER BY "AdjDowCode" DESC, "KowType" desc
					LIMIT 1
				) AS R WHERE R."NumAdd" = 5 AND R."KowType" IN (9,19)
				LIMIT 1
			)
			THEN
				v_KowType := -1;
				v_KowTypePreM := 9;
            END IF; 

			v_Num_Add := 1;
			-- Phat sinh dong moi voi muc moi (I)
			
			INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
				"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
				"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
				"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
				"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
				"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
			VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
				v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
				Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
				p_AdjDowCode, '', 0, v_mTyleBHXH, v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi, v_bs_EffectDate,
				v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate);

			-- Tự động tính truy thu BHXH
			insert into tmp_auto_adj("EmployeeID", "mType") values(v_EmployeeID, 1);
		ELSIF v_OldRealSalSI <> v_RealSalSI OR v_OldRealSalHI <> v_RealSalHI OR v_OldRealSalUI <> v_RealSalUI
		THEN
			
			-- 2021.09.30: Nếu hiệu lực là của payback thì không xư lý
			IF SUBSTR(TO_CHAR (v_bs_EffectDate, 'YYYY/MM/DD'), 1, 7) < p_AdjDowCode AND EXISTS(
				SELECT 1
				FROM (
					SELECT "SignedDate", ROW_NUMBER() OVER(ORDER BY "SignedDate" desc) as "RowID" 
					FROM "HR_EmpBasicSalary" 
					WHERE "EmployeeID" = v_EmployeeID AND "EffectDate" = v_bs_EffectDate
				) AS R WHERE R."RowID" = 1 AND "SignedDate" IS NOT NULL AND SUBSTR(TO_CHAR ("SignedDate", 'YYYY/MM/DD'), 1, 7) = p_AdjDowCode
				LIMIT 1
			)
			then
				CONTINUE;
			end if;
			-- Xét xem mức lương này, tháng trước có áp dụng được không. Nếu không áp dụng được thì không phải là điều chỉnh
			-- Propzy sử dụng option, lương đóng bhxh căn cứ số công thực tế đi làm để xét định mức lương cũ hay mới.
			IF v_PRSITotalPaidDays > 0
			THEN
				v_tmpDayNum := 0;
				v_tmpDowCode := SUBSTR(TO_CHAR (v_bs_EffectDate, 'YYYY/MM/DD'), 1, 7);

				IF v_PRSIAdjDowCodeType = 1
				THEN
					SELECT "ToDate" INTO v_tmpDatetime FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = v_tmpDowCode
					LIMIT 1;
				else
					v_tmpDatetime := INTERVAL '-1 MONTH' + v_Eff_DateNotSi;
				END IF;

				-- Tổng số ngày công hưởng lương
				IF v_PRSITotalPaidDaysType = 1 THEN
					SELECT (v_PRSITotalPaidDays * "StandardWD" / 100) * v_TSHoursPerWD INTO v_tmpPRSITotalPaidDays FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = p_AdjDowCode
					LIMIT 1;
				ELSIF v_PRSITotalPaidDaysType = 0 THEN
					v_tmpPRSITotalPaidDays := v_PRSITotalPaidDays;
				ELSIF v_PRSITotalPaidDaysType = 2 THEN
					SELECT ("StandardWD" - v_PRSITotalPaidDays) * v_TSHoursPerWD INTO v_tmpPRSITotalPaidDays FROM "HR_ConfigTSEmpStandardWD" WHERE "EmployeeID" = v_EmployeeID AND "DowCode" = p_AdjDowCode
					LIMIT 1;
				ELSE
					v_tmpPRSITotalPaidDays := 0;
				END IF;

				-- Đối với nhân viên nghỉ việc thì đếm: công thực tế từ ngày đầu kỳ lương đến ngày báo cáo (ngày hiện tại) + công mặc định từ ngày hiện tại đến ngày nghỉ việc
				IF (v_EndDate Between interval '1 day' + v_Eff_DayOffSi AND v_TDate) -- SQLINES DEMO *** ate)
				THEN 
					v_tmpDatetime := SUBSTR(TO_CHAR (p_GenDate, 'YYYY/MM/DD'), 1, 10);
					v_tmpDayNum := v_tmpDayNum + v_TSHoursPerWD * "HR_fnFGetHT_DemCongMacDinh"(v_EmployeeID, p_AdjDowCode, v_tmpDatetime + 1, v_EndDate - 1, 3);
				ELSE
					/*
						Nhân sự đang làm việc : từ ngày bắt đầu kỳ công đến ngày cuối cùng của tkỳ công/ngày làm việc cuối cùng
						(công tực tế tính đến ngày trích + công dự kiến theo ngày làm việc)> NCC -14 công nghỉ
					*/
					v_fEndDay := v_tmpDatetime;
					v_tmpDatetime := SUBSTR(TO_CHAR (p_GenDate, 'YYYY/MM/DD'), 1, 10);
					v_tmpDayNum := v_tmpDayNum + v_TSHoursPerWD * "HR_fnFGetHT_DemCongMacDinh"(v_EmployeeID, p_AdjDowCode, v_tmpDatetime + 1, @fEndDay, 3);
				END IF;

				WITH "tblA" AS (
					SELECT LTRIM(RTRIM(CAST(data AS VARCHAR(20)))) AS "KowCode" FROM "HR_FNSplitString_varchar"(v_PRSIPaidDayKowCodes::citext, ',')
				)
				SELECT v_tmpDayNum + COALESCE(SUM(T."DayNum"), 0) INTO v_tmpDayNum
				FROM "HR_TSKowDs" AS T INNER JOIN "tblA" AS T1 ON T."KowCode" = T1."KowCode"
				WHERE T."EmployeeID" = v_EmployeeID AND T."WorkDate" BETWEEN v_bs_EffectDate AND v_tmpDatetime;


				IF v_tmpDayNum <= v_tmpPRSITotalPaidDays
				THEN
					CONTINUE;
				END IF;		
			END IF; 


			IF v_OldRealSalSI > v_RealSalSI OR v_OldRealSalHI > v_RealSalHI OR v_OldRealSalUI > v_RealSalUI THEN
				v_Num_Add := 8;
			ELSE
				v_Num_Add := 7;
			END IF;	
			
			-- Phat sinh dong moi voi muc moi va cu (III)
			v_DowCode_SI := left(To_char (interval '-1 month' + To_timestamp(p_AdjDowCode || '/01', 102), 'yyyy/mm/dd'),7);
			
			INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
				"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
				"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns",
				"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
				"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
				"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
				"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
				"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", 
				"HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi", "EffDateAdjSal",
				"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate") 
			SELECT v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
				v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
				Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
				p_AdjDowCode, '', (date_part('year', v_TDate) - date_part('year', (p_AdjDowCode || '/01')::timestamp)) * 12 + (date_part('month', v_TDate) - date_part('month', (p_AdjDowCode || '/01')::timestamp)) + 1, v_mTyleBHXH,
				Round("BasicSalContract",v_decp), "CoeffSalContract", Round("RealSalContract",v_decp), Round("JobAllo",v_decp), Round("SeniorAllo",v_decp), Round("SeniorOverAllo",v_decp), Round("OtherAllo",v_decp),
				Round("TotalAllo",v_decp), "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffIns", Round("TotalSalIns",v_decp), Round("MaxSalSI",v_decp),  Round("RealSalSI",v_decp),
				"SIRateE" + "SIRateC" as "SIRateEO", "HIRateE" + "HIRateC" as "HIRateEO", "UIRateE" + "UIRateC" as "UNPrivateO", 
				Round("SIAmountE",v_decp) as "SIAmountEO", Round("SIAmountC",v_decp) as "SIAmountCO", 
				Round("HIAmountE",v_decp) as "HIAmountEO", Round("HIAmountC",v_decp) as "HIAmountCO",
				Round("UIAmountE",v_decp) as "UIAmountEO", Round("UIAmountC",v_decp) as "UIAmountCO",
				v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi, v_bs_EffectDate,
				v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate
			FROM "HR_SocialIns" Where "EmployeeID" = v_EmployeeID and "DowCode" = v_DowCode_SI;

			IF EXTRACT(DAY FROM v_bs_EffectDate) > EXTRACT(DAY FROM v_Eff_DateNotSi) THEN
				v_bs_EffectDate := INTERVAL '1 MONTH' + v_bs_EffectDate;
			END IF;

			-- Tự động tính truy thu BHXH
			IF SUBSTR(TO_CHAR (v_bs_EffectDate, 'YYYY/MM/DD'), 1, 7) <> p_AdjDowCode THEN
				INSERT into "tmp_auto_adj"("EmployeeID", "mType") values(v_EmployeeID, 3);
			END IF;
		ELSIF abs(v_totPrevPercentPay - v_totCurrPercentPay) = v_mUN -- Tăng hay giảm tỷ lệ thất nghiệp
		then

			if v_totCurrPercentPay > v_totPrevPercentPay then
				v_Num_Add := 15; -- Tăng bảo hiểm thất nghiệp
			else
				v_Num_Add := 20;
			end if; -- Giảm bảo hiểm thất nghiệp
			-- Phat sinh dong moi voi muc moi (I)
			INSERT INTO "tmp_HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
				"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
				"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
				"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", 
				"MonthNum", "TotalInsRate", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
				"RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate")  
			VALUES(v_EmployeeID, Round(v_MinSalary,v_decp), v_CoeffSalary, Round(v_Real_Salary,v_decp), Round(v_JobAllo,v_decp), Round(v_SeniorAllo,v_decp), Round(v_SeniorOverAllo,v_decp), 
				Round(v_OtherAllo,v_decp), Round(v_Amount,v_decp), v_CoeffJobAllo, v_CoeffSeniorAllo, v_CoeffSeniorOverAllo, 
				v_CoeffOtherAllo, v_TotalCoeffAllo, Round(v_mAmountSI,v_decp), Round(v_mBHXHMax,v_decp), Round(v_SalaryInsO,v_decp), 
				Round((v_mTyleBHXHCN) * v_SalaryInsO/100,v_decp), Round((v_mTyleBHXHCT) * v_SalaryInsO/100,v_decp), Round(v_mTyleBHYTCN * v_SalaryInsO_YT/100,v_decp),
				Round(v_mTyleBHYTCT * v_SalaryInsO_YT/100,v_decp), Round(v_mTyleBHTNCN * v_SalaryInsO_TN/100,v_decp), Round(v_mTyleBHTNCT * v_SalaryInsO_TN/100,v_decp), p_note, p_AdjDowCode, v_Num_Add, p_NumAdj,
				p_AdjDowCode, '', 0, v_mTyleBHTN, v_mTyleBHYTCN, v_mTyleBHTNCN, v_mTyleBHXHCN, v_mTyleBHYTCT, v_mTyleBHTNCT, v_mTyleBHXHCT, v_KowType, v_KowTypePreM, v_IsReduceSiUi,
				v_SalaryInsO, v_SalaryInsO_YT, v_SalaryInsO_TN, v_KowCode, v_InsReportingDate);
		END IF;
	END LOOP;

	CLOSE employee_cursor_bhxh_fix;  
	END;
	-- Xứ lý trường hợp báo giảm liên tục, tháng trước (hoặc liền kề trước) đã báo giảm
	-- VD: nghỉ KL từ 12/2019, vẫn còn xuất hiện tên trong DS giảm KL tháng 2/2020

	IF EXISTS(SELECT 1 FROM "tmp_HR_SocialInsAdjust" WHERE NumAdd = 6 LIMIT 1)
	THEN
		CREATE TEMPORARY TABLE "tmp_HCSPR_SalCoeffEmp" AS
		SELECT ce.* FROM (
			SELECT T."EmployeeID", SUM(T."Coefficient") AS "Coefficient"
			FROM "HR_PRSalCoeffEmp" AS T INNER JOIN "tmp_Employee_Config" AS T1 ON T."EmployeeID" = T1."EmployeeID"
				INNER JOIN (SELECT "CoeffCode" FROM "HR_LSSalCoeff" WHERE "SalCoeffType" = 3) AS T2 ON T."CoeffCode" = T2."CoeffCode"
			WHERE T."DowCode" = p_AdjDowCode
			GROUP BY T."EmployeeID"
		) AS ce;
	
		CREATE TEMPORARY TABLE tmp AS
		SELECT R."EmployeeID", R."AdjDowCode", "HIRateE", "HIRateC", "HIAmountE", "HIAmountC", "InsAmountE", "InsAmountC"
			FROM (
				SELECT T."RecID", T."AdjDowCode", T."EmployeeID", T."NumAdd", T."HIRateE", T."HIRateC", T."HIAmountE", T."HIAmountC", T."InsAmountE", T."InsAmountC", 
					ROW_NUMBER() OVER(PARTITION BY T.EmployeeID ORDER BY T.AdjDowCode desc) as RowID
				FROM "HR_SocialInsAdjust" AS T
					INNER JOIN (
						SELECT "EmployeeID" FROM "tmp_HR_SocialInsAdjust" WHERE "NumAdd" = 6
					) AS T1 ON T."EmployeeID" = T1."EmployeeID"
				WHERE T."AdjDowCode" < p_AdjDowCode
			) AS R WHERE R."RowID" = 1 AND R."NumAdd" = 6;

		DELETE FROM tmp T
		USING "HR_SocialIns" T1
		WHERE T."EmployeeID" = T1."EmployeeID"
		AND T1."DowCode" < p_AdjDowCode
		AND T1."DowCode" > T."AdjDowCode";

		DELETE FROM "tmp_HR_SocialInsAdjust" T
		USING tmp T1
		LEFT JOIN "tmp_HCSPR_SalCoeffEmp" T2 ON T."EmployeeID" = T2."EmployeeID"
		WHERE T."EmployeeID" = T1."EmployeeID"
		AND (T2."EmployeeID" IS NULL OR (T2."EmployeeID" IS NOT NULL AND T."NumAdd" = 14));

		UPDATE "tmp_HR_SocialInsAdjust" T
		SET 
			T."HIRateE" = T2."HIRateE",
			T."HIRateC" = T2."HIRateC",
			T."HIAmountE" = T2."HIAmountE",
			T."HIAmountC" = T2."HIAmountC"
		FROM "tmp_HCSPR_SalCoeffEmp" T1
		INNER JOIN "tmp_HCSSI_SocialInsAdjust_v2" T2 ON T."EmployeeID" = T2."EmployeeID"
		WHERE T."EmployeeID" = T1."EmployeeID";

		DELETE FROM "tmp_HR_SocialInsAdjust" T
		USING tmp T1
		WHERE T."EmployeeID" = T1."EmployeeID"
		AND T."NumAdd" = 1;

		DELETE FROM "tmp_HR_SocialIns" T
		USING tmp T1
		LEFT JOIN "tmp_HCSPR_SalCoeffEmp" T2 ON T."EmployeeID" = T2."EmployeeID"
		WHERE T."EmployeeID" = T1."EmployeeID"
		AND T2."EmployeeID" IS NULL;
    end if;

	IF EXISTS(SELECT 1 FROM "tmp_HR_SocialInsAdjust" WHERE "NumAdd" = 14 LIMIT 1)
	THEN
		DELETE FROM "tmp_HR_SocialInsAdjust" T
		WHERE T."NumAdd" = 1
		AND T."EmployeeID" IN (
			SELECT "EmployeeID"
			FROM "tmp_HR_SocialInsAdjust"
			WHERE "NumAdd" = 14
		);
	end if;

	IF EXISTS(SELECT 1 FROM "tmp_HR_SocialInsAdjust" WHERE "NumAdd" in (2,3,4) LIMIT 1)
	THEN
		DELETE FROM "tmp_HR_SocialInsAdjust" T
		WHERE T."NumAdd" = 14;
	end if; 
	

	-- insert danh sach nv tham gia trich nop BHXH vao bang chinh
	insert into "HR_SocialInsAdjust"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
		"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
		"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
		"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC",
		"Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
		"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
		"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
		"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
		"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
		"EffDateAdjSal", "RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate", "IsTmp", "GenDate") 
	select A."EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
		"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
		"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns",  
		"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", A."SIAmountE" + A."HIAmountE" + A."UIAmountE", A."SIAmountC" + A."HIAmountC" + A."UIAmountC", 
		"Note", "AdjDowCode", "NumAdd", "NumAdj", A."FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
		"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
		"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
		"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
		"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", 
		"HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC",
		"KowType", "KowTypePreM", "IsReduceSiUi",
		A."EffDateAdjSal", A."RealSalSI", A."RealSalHI", A."RealSalUI", A."KowCode", A."InsReportingDate", p_IsTmp, p_GenDate
	from "tmp_HR_SocialInsAdjust" as A left join "tmp_employee_filters" as E on A."EmployeeID" = E."EmployeeID";
	
	---- insert danh sach nv tham gia trich nop BHXH vao bang chinh
	--	select A.EmployeeID, DowCode, BasicSalContract, CoeffSalContract, RealSalContract, JobAllo, SeniorAllo, SeniorOverAllo, OtherAllo,
	--		TotalAllo, CoeffJobAllo, CoeffSeniorAllo, CoeffSeniorOverAllo, CoeffOtherAllo, TotalCoeffAllo, MaxSalSI, MaxSalHI, MaxSalUI, TotalSalIns,
	--		TotalCoeffIns, RealSalSI, RealSalHI, RealSalUI, SIRateE, SIRateC, HIRateE, HIRateC, UIRateE, UIRateC, SIAmountE, SIAmountC,
	--		HIAmountE, HIAmountC, UIAmountE, UIAmountC, InsAmountE, InsAmountC, TUnionAmountC, NumAdd, Note, SalaryIns, @IsTmp, @GenDate
	--from #HR_SocialIns as A left join #employee_filters as E on A.EmployeeID = E.EmployeeID	

	insert into "HR_SocialIns"("EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
			"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
			"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
			"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns", "IsTmp", "GenDate")
	select A."EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
			"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
			"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
			"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns", p_IsTmp, p_GenDate
	from "tmp_HR_SocialIns" as A left join "tmp_employee_filters" as E on A."EmployeeID" = E."EmployeeID";	
	
	-- Xử lý bổ sung
	IF EXISTS(SELECT 1 FROM "HR_ConfigPRSubAutoBackCollectSI" WHERE "AddAdjType" IN (7, 8) LIMIT 1)
	THEN
		/* 
			Ví dụ: Tháng 7 (chu kỳ lương 1-31)
			Ngày 15.07 --> nhân viên trích nộp bhxh bình thường
			Ngày 31.07 --> Tính lương, phát hiện không đủ công (không vượt quá 50%) --> khong tính bhxh khi tính lương
			Ngày 15.08 --> Báo giảm trễ bổ sung		
		
		*/
		CREATE TEMPORARY TABLE "tmp_HCSPR_PayIncome" AS
			SELECT ce."EmployeeID" FROM (
				SELECT T."EmployeeID", SUM("HIAmountE" + "SIAmountE" + "UIAmountE") AS "AmountE"
				FROM "HR_PayIncome" AS T INNER JOIN "tmpEmps" AS T1 ON T."EmployeeID" = T1."EmployeeID" AND T."DowCode" = v_PrevAdjDowCode
				GROUP BY T."EmployeeID"
			) AS ce WHERE ce."AmountE" = 0;

		-- Điều chỉnh giảm trễ (do cuối tháng xét công >= 50%)
		INSERT INTO tmp_auto_adj("EmployeeID", "mType")
		SELECT R."EmployeeID", 4
		FROM "tmp_HCSPR_PayIncome" AS R LEFT JOIN (
			select T."EmployeeID"
			FROM "HR_SocialInsAdjust" AS T INNER JOIN "tmp_HCSPR_PayIncome" AS T1 ON T."EmployeeID" = T1."EmployeeID"
			WHERE T."AdjDowCode" = v_PrevAdjDowCode AND T."NumAdd" IN (6, 14)
			GROUP BY T."EmployeeID"
		) AS R1 ON R."EmployeeID" = R1."EmployeeID"
		WHERE R1."EmployeeID" IS NULL; 
	end if;

	-- Tự động tính truy thu BHXH
	/*
		1. Bổ sung cho các tháng chưa nộp
		2. Nghỉ việc báo trễ
		3. Điều chỉnh mức đóng BHXH
		4. Trả thẻ BHYT sau khi nghỉ việc không trả thẻ
		5. Trường hợp Thai sản: chỉ phát sinh 1 dòng giảm
	*/
	DECLARE employee_cursor_bhxh CURSOR FOR
		select "EmployeeID", "mType" from tmp_auto_adj;
	BEGIN
	OPEN employee_cursor_bhxh;
	WHILE 1 = 1  
	LOOP
		FETCH NEXT FROM employee_cursor_bhxh INTO v_EmployeeID, v_mType;
		IF NOT FOUND THEN
			EXIT;
		END IF;
		
		-- Tự động tính truy thu BHXH
		call "HR_spAdjustSIAuto"(v_UserID, v_mType, v_AdjDowCode, v_NumAdj, v_note, v_EmployeeID);
	END LOOP;
	CLOSE employee_cursor_bhxh;
	END;
	
	-- Xử lý Tự động tính truy thu BHXH cho trường hợp: Ốm đau, nghỉ việc riêng báo trễ
	CALL "HR_spSaveTExceptsAfterDeduction4ExceptionCase"(v_AdjDowCode, v_FDate, v_TDate, v_strEmps, 6);

	/*
		2022.05.19: Tạo data backup để ghi nhận data trích tạm
	*/
	IF p_IsTmp <> 0
	THEN
		-- Lay ve danh sach nhan vien chuan bi thuc hien trich nop BHXH va xoa di du lieu cu thoa dk where 
		DELETE FROM "HR_SocialIns_Layer" SI
		USING "tmp_employee_filters" F
		WHERE SI."EmployeeID" = F."EmployeeID"
		AND SI."DowCode" = p_AdjDowCode;

		-- Lay ve danh sach nhan vien chuan bi thuc hien trich nop BHXH va xoa di du lieu cu thoa dk where 
		DELETE FROM "HR_SocialInsAdjust_Layer" SIA
		USING "tmp_employee_filters" F
		WHERE SIA."EmployeeID" = F."EmployeeID"
		AND SIA."AdjDowCode" = p_AdjDowCode
		AND SIA."NumAdj" = p_NumAdj;

		-- insert danh sach nv tham gia trich nop BHXH vao bang chinh
		insert into "HR_SocialInsAdjust_Layer"("EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
			"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
			"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns", 
			"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC",
			"Note", "AdjDowCode", "NumAdd", "NumAdj", "FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
			"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
			"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
			"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
			"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", "HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
			"EffDateAdjSal", "RealSalSI", "RealSalHI", "RealSalUI", "KowCode", "InsReportingDate", "IsTmp", "GenDate") 
		select A."EmployeeID", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", 
			"SeniorOverAllo", "OtherAllo", "TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", 
			"CoeffOtherAllo", "TotalCoeffAllo", "TotalSalIns", "MaxSalSI", "SalaryIns",  
			"SIAmountE", "SIAmountC", "HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", A."SIAmountE" + A."HIAmountE" + A."UIAmountE", A."SIAmountC" + A."HIAmountC" + A."UIAmountC", 
			"Note", "AdjDowCode", "NumAdd", "NumAdj", A."FromDowCode", "ToDowCode", "MonthNum", "TotalInsRate",
			"BasicSalContractO", "CoeffSalContractO", "RealSalContractO", "JobAlloO", "SeniorAlloO", 
			"SeniorOverAlloO", "OtherAlloO", "TotalAlloO", "CoeffJobAlloO", "CoeffSeniorAlloO", "CoeffSeniorOverAlloO", 
			"CoeffOtherAlloO", "TotalCoeffAlloO", "TotalSalInsO", "MaxSalSIO", "SalaryInsO", "SIRateEO", "HIRateEO", "UIRateEO",  
			"SIAmountEO", "SIAmountCO", "HIAmountEO", "HIAmountCO", "UIAmountEO", "UIAmountCO", 
			"HIRateE", "UIRateE", "SIRateE", "HIRateC", "UIRateC", "SIRateC", "KowType", "KowTypePreM", "IsReduceSiUi",
			A."EffDateAdjSal", A."RealSalSI", A."RealSalHI", A."RealSalUI", A."KowCode", A."InsReportingDate", p_IsTmp, p_GenDate
		from "HR_SocialInsAdjust" as A inner join "tmp_employee_filters" as E on A."EmployeeID" = E."EmployeeID"
		WHERE A."AdjDowCode" = p_AdjDowCode; --AND A.IsTmp = 0
	
		-- insert danh sach nv tham gia trich nop BHXH vao bang chinh
		insert into "HR_SocialIns_Layer"("EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
			"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
			"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
			"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns", "IsTmp", "GenDate")
		select A."EmployeeID", "DowCode", "BasicSalContract", "CoeffSalContract", "RealSalContract", "JobAllo", "SeniorAllo", "SeniorOverAllo", "OtherAllo",
			"TotalAllo", "CoeffJobAllo", "CoeffSeniorAllo", "CoeffSeniorOverAllo", "CoeffOtherAllo", "TotalCoeffAllo", "MaxSalSI", "MaxSalHI", "MaxSalUI", "TotalSalIns",
			"TotalCoeffIns", "RealSalSI", "RealSalHI", "RealSalUI", "SIRateE", "SIRateC", "HIRateE", "HIRateC", "UIRateE", "UIRateC", "SIAmountE", "SIAmountC",
			"HIAmountE", "HIAmountC", "UIAmountE", "UIAmountC", "InsAmountE", "InsAmountC", "TUnionAmountC", "NumAdd", "Note", "SalaryIns", p_IsTmp, p_GenDate
		from "HR_SocialIns" as A inner join "tmp_employee_filters" as E on A."EmployeeID" = E."EmployeeID"
		WHERE A."DowCode" = p_AdjDowCode; --AND a.IsTmp = 0
    END IF;

end;
$$ LANGUAGE plpgsql;

